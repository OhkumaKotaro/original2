ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	UART_EndTxTransfer:
  25              	.LFB170:
  26              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @file    stm32f4xx_hal_uart.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @version V1.7.1
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @date    14-April-2017
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following 
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + IO operation functions
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral Control functions  
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral State and Errors functions  
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @verbatim       
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                         ##### How to use this driver #####
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure.
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) UART pins configuration:
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 2


  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx stream.
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required 
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   Tx/Rx parameters.                
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx Stream.
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete 
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx Stream.
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware 
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the Init structure.
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_UART_Init() API.
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling 
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling 
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt, 
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit 
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             and receive process.
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the 
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized 
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_MspInit() API.
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         Three operation modes are available within this driver :     
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Polling mode IO operation ***
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      =================================
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]    
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit() 
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Interrupt mode IO operation ***    
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ===================================
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]    
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT() 
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT() 
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 3


  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** DMA mode IO operation ***    
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ==============================
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA() 
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback 
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA() 
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can 
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback 
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()      
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()  
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()      
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** UART HAL driver macros list ***
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ============================================= 
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral 
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral     
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros 
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @endverbatim
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @attention
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      without specific prior written permission.
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 4


 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */ 
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #include "stm32f4xx_hal.h"
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup STM32F4xx_HAL_Driver
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART UART
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief HAL UART module driver
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Constants
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions   UART Private Functions
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma); 
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig (UART_HandleTypeDef *huart);
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 5


 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Exported functions ---------------------------------------------------------*/
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions 
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions 
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim    
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** ===============================================================================
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================  
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy 
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in asynchronous mode.
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured: 
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Baud Rate
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Word Length 
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Stop Bit
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.           
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Hardware flow control
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Over Sampling Method
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs 
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     configuration procedures (details for the procedures are available in reference manual (RM0329)
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the UART_InitTypeDef and create the associated handle.
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* The hardware flow control is available only for USART1, USART2, USART3 and USART6 */
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 6


 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {  
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared: 
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the half-duplex mode according to the specified
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */ 
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 7


 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared: 
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the LIN mode according to the specified
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  BreakDetectLength: Specifies the LIN break detection length.
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 8


 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared: 
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_LBDL);
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the Multi-Processor mode according to the specified
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Address: USART address
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  WakeUpMethod: specifies the USART wake-up method.
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          This parameter can be one of the following values:
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_IDLELINE: Wake-up by an idle line detection
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_ADDRESSMARK: Wake-up by an address mark
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 9


 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In Multi-Processor mode, the following bits must be kept cleared: 
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register */
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear the USART address */
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_ADD);
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART address node */
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, Address);
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_WAKE);
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 10


 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DeInitializes the UART peripheral. 
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DeInit the low level hardware */
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Lock */
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP Init.
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    /* Prevent unused argument(s) compilation warning */
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspInit could be implemented in the user file
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP DeInit.
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 11


 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspDeInit could be implemented in the user file
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions 
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief UART Transmit and Receive functions 
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim   
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### IO operation functions #####
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================  
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and Half duplex data transfers.
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) There are two modes of transfer:
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (++) Blocking mode: The communication is performed in polling mode. 
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             The HAL status of all data processing is returned by the same function 
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             after finishing transfer.  
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (++) Non blocking mode: The communication is performed using Interrupts 
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             or DMA, these APIs return the HAL status.
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             The end of the data processing will be indicated through the 
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             dedicated UART IRQ when using Interrupt mode or the DMA IRQ when 
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             using DMA mode.
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks 
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             will be executed respectively at the end of the transmit or receive process.
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             The HAL_UART_ErrorCallback() user callback will be executed when 
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             a communication error is detected.
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Blocking mode APIs are:
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Transmit()
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Receive() 
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non Blocking mode APIs with Interrupt are:
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Transmit_IT()
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Receive_IT()
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_IRQHandler()
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non Blocking mode functions with DMA are:
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Transmit_DMA()
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Receive_DMA()
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in non blocking mode:
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_TxCpltCallback()
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_RxCpltCallback()
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_ErrorCallback()
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..] 
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (@) In the Half duplex communication, it is forbidden to run the transmit 
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 12


 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           can't be useful.
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in blocking mode. 
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout: Timeout duration  
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY) 
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout managment */
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount--;
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=2U;
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=1U;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 13


 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       } 
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       } 
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_TIMEOUT;
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in blocking mode. 
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size: Amount of data to be received
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout: Timeout duration
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** { 
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY) 
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 14


 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout managment */
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size; 
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check the remain data to be received */
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount--;
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=2U;
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=1U;
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       } 
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 15


 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;   
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit data register empty Interrupt */
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;   
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode 
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size: Amount of data to be received
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 16


 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */ 
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error and Data Register not empty Interrupts */
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY; 
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode. 
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0))
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 17


 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA abort callback */
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART transmit DMA Stream */
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t*)tmp, (uint32_t)&huart->Instance->DR, Size);
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode. 
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size: Amount of data to be received
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1) the data received contain the parity bit.
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {  
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 18


 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY) 
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA abort callback */
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA Stream */
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t*)tmp, Size);
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the sec
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit 
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in the UART CR3 register */
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY; 
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 19


1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Pauses the DMA Transfer.
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t dmarequest = 0x00U;
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Resumes the DMA Transfer.
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 20


1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Stops the DMA Transfer.
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      and the correspond call back is executed HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      */
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 21


1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel: use blocking DMA Abort API (no callback) */
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel: use blocking DMA Abort API (no callback) */
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 22


1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState and huart->gState to Ready */
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 23


1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Rx transfer counter */
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 24


1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      before any call to DMA Abort functions */
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->hdmatx != NULL)
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->hdmarx != NULL)
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised : 
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
1339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 25


1344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised : 
1352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x01U;
1359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(AbortCplt == 0x01U)
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U; 
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
1373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset ErrorCode */
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 26


1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
1420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
1424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {      
1428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Tx transfer counter */
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount = 0x00U;
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
1433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
1436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx transfer counter */
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
1442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
1448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 27


1458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
1484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
1486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
1490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Rx transfer counter */
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount = 0x00U; 
1496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
1499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
1502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Rx transfer counter */
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U; 
1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 28


1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART interrupt request.
1521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t isrflags   = READ_REG(huart->Instance->SR);
1528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t cr1its     = READ_REG(huart->Instance->CR1);
1529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t cr3its     = READ_REG(huart->Instance->CR3);
1530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t errorflags = 0x00U;
1531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t dmarequest = 0x00U;
1532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If no error occurs */
1534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(errorflags == RESET)
1536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART in mode Receiver -------------------------------------------------*/
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       UART_Receive_IT(huart);
1541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
1542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }  
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If some errors occur */
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE 
1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART parity error interrupt occurred ----------------------------------*/
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
1550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART noise error interrupt occurred -----------------------------------*/
1555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART frame error interrupt occurred -----------------------------------*/
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred --------------------------------------*/
1567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_ORE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
1569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 29


1572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/    
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
1574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART in mode Receiver -----------------------------------------------*/
1576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_Receive_IT(huart);
1579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          consider error as blocking */
1583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
1585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
1590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
1591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           
1596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           if(huart->hdmarx != NULL)
1598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Set the UART DMA Abort callback : 
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             {
1604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               /* Call Directly XferAbortCallback function in case of error */
1605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
1606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             }
1607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
1608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           else
1609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
1610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Call user error callback */
1611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
1612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
1613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Call user error callback */
1617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
1618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on. 
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Error is notified to user through user error callback */
1624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
1625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 30


1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   } /* End if some error occurs */
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
1633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_Transmit_IT(huart);
1635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter end --------------------------------------------*/
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
1640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
1642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
1643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Transfer completed callbacks.
1648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
1659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
1663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
1674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Transfer completed callbacks.
1678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 31


1686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
1689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
1693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
1704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART error callbacks.
1708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart); 
1716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_ErrorCallback could be implemented in the user file
1718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
1719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback (UART_HandleTypeDef *huart)
1727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
1733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
1734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback (UART_HandleTypeDef *huart)
1741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 32


1743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
1747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
1748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
1752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback (UART_HandleTypeDef *huart)
1756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
1762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
1767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions 
1770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART control functions 
1771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
1772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim   
1773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
1774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================  
1776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
1777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART:
1778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_LIN_SendBreak() API can be helpful to transmit the break character.
1779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_EnterMuteMode() API can be helpful to enter the UART in mute mode. 
1780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_ExitMuteMode() API can be helpful to exit the UART mute mode by software
1781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
1783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
1784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Transmits break characters.
1788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
1795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 33


1800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Send break characters */
1803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_SBK);
1804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
1805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
1811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enters the UART in mute mode. 
1815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
1822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
1830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RWU);
1831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
1838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Exits the UART mute mode: wake up software. 
1842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_ExitMuteMode(UART_HandleTypeDef *huart)
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 34


1857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_RWU);
1858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
1865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
1869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
1874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
1884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
1886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
1887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
1889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_TE;
1890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
1892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
1893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
1894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
1900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
1904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
1909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
1911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 35


1914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
1919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
1921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
1922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
1924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_RE;
1925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
1927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
1928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
1935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
1939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Errors functions 
1942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART State and Errors functions 
1943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
1944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim   
1945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
1946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                  ##### Peripheral State and Errors functions #####
1947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================  
1948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  [..]
1949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    This subsection provides a set of functions allowing to return the State of 
1950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    UART communication process, return Peripheral Errors occurred during communication 
1951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    process
1952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetState() API can be helpful to check in run-time the state of the UART peripheral
1953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetError() check in run-time errors that could be occurred during communication. 
1954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
1956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
1957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Returns the UART state.
1961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL state
1964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
1966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
1968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp1 = huart->gState;
1969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp2 = huart->RxState;
1970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 36


1971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
1972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Return the UART error code
1976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart : pointer to a UART_HandleTypeDef structure that contains
1977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *              the configuration information for the specified UART.
1978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval UART Error Code
1979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
1981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return huart->ErrorCode;
1983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
1987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART transmit process complete callback. 
1991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma: DMA handle
1992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
1995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
1997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
1998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
1999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0U;
2001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
2003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
2004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
2008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Circular mode */
2011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
2014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback 
2019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
2020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified DMA module.
2021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
2026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 37


2028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART receive process complete callback. 
2032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma: DMA handle
2033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
2039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0U;
2042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
2045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
2047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit 
2048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
2051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
2052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
2055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback 
2059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
2060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified DMA module.
2061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
2066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart); 
2068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication error callback.
2072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma: DMA handle
2073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
2078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
2082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
2083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0U;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 38


2085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
2089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR); 
2090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
2091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0U;
2093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
2094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
2097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
2098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout.
2102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
2103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Flag: specifies the UART flag to check.
2105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Status: The new Flag status (SET or RESET).
2106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Tickstart Tick start value
2107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout: Timeout duration
2108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
2111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Wait until flag is set */
2113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status) 
2114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check for the Timeout */
2116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
2117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if((Timeout == 0U)||((HAL_GetTick() - Tickstart ) > Timeout))
2119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
2122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
2124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
2125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
2127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Process Unlocked */
2128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
2129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
2130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         return HAL_TIMEOUT;
2131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: UART handle.
2141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 39


2142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
  27              		.loc 1 2144 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
2145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  33              		.loc 1 2146 0
  34 0000 0268     		ldr	r2, [r0]
  35 0002 D368     		ldr	r3, [r2, #12]
  36 0004 23F0C003 		bic	r3, r3, #192
  37 0008 D360     		str	r3, [r2, #12]
2147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  38              		.loc 1 2149 0
  39 000a 2023     		movs	r3, #32
  40 000c 80F83930 		strb	r3, [r0, #57]
2150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
  41              		.loc 1 2150 0
  42 0010 7047     		bx	lr
  43              		.cfi_endproc
  44              	.LFE170:
  46              		.section	.text.UART_EndRxTransfer,"ax",%progbits
  47              		.align	1
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  51              		.fpu fpv4-sp-d16
  53              	UART_EndRxTransfer:
  54              	.LFB171:
2151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: UART handle.
2155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
  55              		.loc 1 2158 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LVL1:
2159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  61              		.loc 1 2160 0
  62 0000 0268     		ldr	r2, [r0]
  63 0002 D368     		ldr	r3, [r2, #12]
  64 0004 23F49073 		bic	r3, r3, #288
  65 0008 D360     		str	r3, [r2, #12]
2161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 40


  66              		.loc 1 2161 0
  67 000a 0268     		ldr	r2, [r0]
  68 000c 5369     		ldr	r3, [r2, #20]
  69 000e 23F00103 		bic	r3, r3, #1
  70 0012 5361     		str	r3, [r2, #20]
2162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  71              		.loc 1 2164 0
  72 0014 2023     		movs	r3, #32
  73 0016 80F83A30 		strb	r3, [r0, #58]
2165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
  74              		.loc 1 2165 0
  75 001a 7047     		bx	lr
  76              		.cfi_endproc
  77              	.LFE171:
  79              		.section	.text.UART_Transmit_IT,"ax",%progbits
  80              		.align	1
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  84              		.fpu fpv4-sp-d16
  86              	UART_Transmit_IT:
  87              	.LFB177:
2166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle.
2171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0U;
2177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0U;
2178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
2180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle.
2188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
2195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->hdmarx != NULL)
2198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 41


2199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx->XferAbortCallback != NULL)
2200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
2202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
2210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle.
2226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
2233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->hdmatx != NULL)
2236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx->XferAbortCallback != NULL)
2238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
2240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
2248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 42


2256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
2260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle.
2264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
2277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
2281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle.
2285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
2298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
2302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
2303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
  88              		.loc 1 2307 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 43


  93              	.LVL2:
2308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
2309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
2311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
  94              		.loc 1 2311 0
  95 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
  96 0004 DBB2     		uxtb	r3, r3
  97 0006 212B     		cmp	r3, #33
  98 0008 2AD1     		bne	.L8
2312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->Init.WordLength == UART_WORDLENGTH_9B)
  99              		.loc 1 2313 0
 100 000a 8368     		ldr	r3, [r0, #8]
 101 000c B3F5805F 		cmp	r3, #4096
 102 0010 16D0     		beq	.L10
2314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (uint16_t*) huart->pTxBuffPtr;
2316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
2317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
2318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
2320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pTxBuffPtr += 1U;
2324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     } 
2326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 103              		.loc 1 2328 0
 104 0012 036A     		ldr	r3, [r0, #32]
 105 0014 5A1C     		adds	r2, r3, #1
 106 0016 0262     		str	r2, [r0, #32]
 107 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 108 001a 0368     		ldr	r3, [r0]
 109 001c 5A60     		str	r2, [r3, #4]
 110              	.L7:
2329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(--huart->TxXferCount == 0U)
 111              		.loc 1 2331 0
 112 001e C38C     		ldrh	r3, [r0, #38]
 113 0020 013B     		subs	r3, r3, #1
 114 0022 9BB2     		uxth	r3, r3
 115 0024 C384     		strh	r3, [r0, #38]	@ movhi
 116 0026 EBB9     		cbnz	r3, .L9
2332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Transmit Complete Interrupt */
2334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 117              		.loc 1 2334 0
 118 0028 0268     		ldr	r2, [r0]
 119 002a D368     		ldr	r3, [r2, #12]
 120 002c 23F08003 		bic	r3, r3, #128
 121 0030 D360     		str	r3, [r2, #12]
2335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 44


2336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */    
2337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 122              		.loc 1 2337 0
 123 0032 0268     		ldr	r2, [r0]
 124 0034 D368     		ldr	r3, [r2, #12]
 125 0036 43F04003 		orr	r3, r3, #64
 126 003a D360     		str	r3, [r2, #12]
2338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 127              		.loc 1 2339 0
 128 003c 0020     		movs	r0, #0
 129              	.LVL3:
 130 003e 7047     		bx	lr
 131              	.LVL4:
 132              	.L10:
2315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 133              		.loc 1 2315 0
 134 0040 036A     		ldr	r3, [r0, #32]
 135              	.LVL5:
2316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 136              		.loc 1 2316 0
 137 0042 1B88     		ldrh	r3, [r3]
 138              	.LVL6:
 139 0044 0268     		ldr	r2, [r0]
 140 0046 C3F30803 		ubfx	r3, r3, #0, #9
 141 004a 5360     		str	r3, [r2, #4]
 142              	.LVL7:
2317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 143              		.loc 1 2317 0
 144 004c 0369     		ldr	r3, [r0, #16]
 145 004e 1BB9     		cbnz	r3, .L6
2319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 146              		.loc 1 2319 0
 147 0050 036A     		ldr	r3, [r0, #32]
 148 0052 0233     		adds	r3, r3, #2
 149 0054 0362     		str	r3, [r0, #32]
 150 0056 E2E7     		b	.L7
 151              	.L6:
2323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 152              		.loc 1 2323 0
 153 0058 036A     		ldr	r3, [r0, #32]
 154 005a 0133     		adds	r3, r3, #1
 155 005c 0362     		str	r3, [r0, #32]
 156 005e DEE7     		b	.L7
 157              	.L8:
2340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 158              		.loc 1 2343 0
 159 0060 0220     		movs	r0, #2
 160              	.LVL8:
 161 0062 7047     		bx	lr
 162              	.LVL9:
 163              	.L9:
2339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 164              		.loc 1 2339 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 45


 165 0064 0020     		movs	r0, #0
 166              	.LVL10:
2344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 167              		.loc 1 2345 0
 168 0066 7047     		bx	lr
 169              		.cfi_endproc
 170              	.LFE177:
 172              		.section	.text.UART_SetConfig,"ax",%progbits
 173              		.align	1
 174              		.syntax unified
 175              		.thumb
 176              		.thumb_func
 177              		.fpu fpv4-sp-d16
 179              	UART_SetConfig:
 180              	.LFB180:
2346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Wraps up transmission in non blocking mode.
2349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
2350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */    
2356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
2357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
2361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
2362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode 
2368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
2369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
2375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX) 
2378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->Init.WordLength == UART_WORDLENGTH_9B)
2380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr;
2382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
2383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
2385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 2U;
2386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 46


2387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
2390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 1U;
2391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
2396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
2398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
2402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(--huart->RxXferCount == 0U)
2406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
2408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
2414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      
2416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
2417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_OK;
2419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
2421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
2425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Configures the UART peripheral. 
2430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
2431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
2435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 181              		.loc 1 2435 0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 0
 184              		@ frame_needed = 0, uses_anonymous_args = 0
 185              	.LVL11:
 186 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 187              	.LCFI0:
 188              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 47


 189              		.cfi_offset 3, -32
 190              		.cfi_offset 4, -28
 191              		.cfi_offset 5, -24
 192              		.cfi_offset 6, -20
 193              		.cfi_offset 7, -16
 194              		.cfi_offset 8, -12
 195              		.cfi_offset 9, -8
 196              		.cfi_offset 14, -4
 197 0004 0446     		mov	r4, r0
 198              	.LVL12:
2436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
2437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR2;
 199              		.loc 1 2445 0
 200 0006 0168     		ldr	r1, [r0]
 201 0008 0A69     		ldr	r2, [r1, #16]
 202              	.LVL13:
2446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear STOP[13:12] bits */
2448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)USART_CR2_STOP);
 203              		.loc 1 2448 0
 204 000a 22F44052 		bic	r2, r2, #12288
 205              	.LVL14:
2449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according to huart->Init.StopBits value */
2451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->Init.StopBits;
 206              		.loc 1 2451 0
 207 000e C368     		ldr	r3, [r0, #12]
 208 0010 1343     		orrs	r3, r3, r2
 209              	.LVL15:
2452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR2 */
2454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR2, (uint32_t)tmpreg);
 210              		.loc 1 2454 0
 211 0012 0B61     		str	r3, [r1, #16]
2455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 212              		.loc 1 2457 0
 213 0014 0168     		ldr	r1, [r0]
 214 0016 CA68     		ldr	r2, [r1, #12]
 215              	.LVL16:
2458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear M, PCE, PS, TE and RE bits */
2460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | \
 216              		.loc 1 2460 0
 217 0018 22F41642 		bic	r2, r2, #38400
 218              	.LVL17:
 219 001c 22F00C02 		bic	r2, r2, #12
 220              	.LVL18:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 48


2461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                    USART_CR1_RE | USART_CR1_OVER8));
2462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Word Length, Parity and mode: 
2464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set the M bits according to huart->Init.WordLength value 
2465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set PCE and PS bits according to huart->Init.Parity value
2466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set TE and RE bits according to huart->Init.Mode value
2467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set OVER8 bit according to huart->Init.OverSampling value */
2468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.
 221              		.loc 1 2468 0
 222 0020 8368     		ldr	r3, [r0, #8]
 223 0022 0069     		ldr	r0, [r0, #16]
 224              	.LVL19:
 225 0024 0343     		orrs	r3, r3, r0
 226 0026 6069     		ldr	r0, [r4, #20]
 227 0028 0343     		orrs	r3, r3, r0
 228 002a E069     		ldr	r0, [r4, #28]
 229 002c 0343     		orrs	r3, r3, r0
 230 002e 1343     		orrs	r3, r3, r2
 231              	.LVL20:
2469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
2471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 232              		.loc 1 2471 0
 233 0030 CB60     		str	r3, [r1, #12]
2472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/  
2474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR3;
 234              		.loc 1 2474 0
 235 0032 2168     		ldr	r1, [r4]
 236 0034 4A69     		ldr	r2, [r1, #20]
 237              	.LVL21:
2475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear CTSE and RTSE bits */
2477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE));
 238              		.loc 1 2477 0
 239 0036 22F44072 		bic	r2, r2, #768
 240              	.LVL22:
2478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
2480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= huart->Init.HwFlowCtl;
 241              		.loc 1 2480 0
 242 003a A369     		ldr	r3, [r4, #24]
 243 003c 1343     		orrs	r3, r3, r2
 244              	.LVL23:
2481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR3 */
2483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR3, (uint32_t)tmpreg);
 245              		.loc 1 2483 0
 246 003e 4B61     		str	r3, [r1, #20]
2484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Over Sampling */
2486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
 247              		.loc 1 2486 0
 248 0040 E369     		ldr	r3, [r4, #28]
 249              	.LVL24:
 250 0042 B3F5004F 		cmp	r3, #32768
 251 0046 60D0     		beq	.L19
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 49


2487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
2489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if defined(USART6) 
2490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((huart->Instance == USART1) || (huart->Instance == USART6))
2491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
2493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->Instance == USART1)
2496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
2498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }	
2499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USART6 */
2500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
2503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
2508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if defined(USART6) 
2509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((huart->Instance == USART1) || (huart->Instance == USART6))
 252              		.loc 1 2509 0
 253 0048 2368     		ldr	r3, [r4]
 254 004a B84A     		ldr	r2, .L20
 255 004c 9342     		cmp	r3, r2
 256 004e 00F01481 		beq	.L16
 257              		.loc 1 2509 0 is_stmt 0 discriminator 1
 258 0052 02F58062 		add	r2, r2, #1024
 259 0056 9342     		cmp	r3, r2
 260 0058 00F00F81 		beq	.L16
2510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
2512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->Instance == USART1)
2515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
2517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }	
2518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USART6 */
2519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 261              		.loc 1 2521 0 is_stmt 1
 262 005c FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 263              	.LVL25:
 264 0060 00EB8000 		add	r0, r0, r0, lsl #2
 265 0064 00EB8000 		add	r0, r0, r0, lsl #2
 266 0068 6568     		ldr	r5, [r4, #4]
 267 006a AD00     		lsls	r5, r5, #2
 268 006c B0FBF5F5 		udiv	r5, r0, r5
 269 0070 AF4F     		ldr	r7, .L20+4
 270 0072 A7FB0535 		umull	r3, r5, r7, r5
 271 0076 6D09     		lsrs	r5, r5, #5
 272 0078 2E01     		lsls	r6, r5, #4
 273 007a FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 50


 274              	.LVL26:
 275 007e 00EB8000 		add	r0, r0, r0, lsl #2
 276 0082 00EB8000 		add	r0, r0, r0, lsl #2
 277 0086 6568     		ldr	r5, [r4, #4]
 278 0088 AD00     		lsls	r5, r5, #2
 279 008a B0FBF5F9 		udiv	r9, r0, r5
 280 008e FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 281              	.LVL27:
 282 0092 00EB8000 		add	r0, r0, r0, lsl #2
 283 0096 00EB8000 		add	r0, r0, r0, lsl #2
 284 009a 6568     		ldr	r5, [r4, #4]
 285 009c AD00     		lsls	r5, r5, #2
 286 009e B0FBF5F5 		udiv	r5, r0, r5
 287 00a2 A7FB0535 		umull	r3, r5, r7, r5
 288 00a6 6D09     		lsrs	r5, r5, #5
 289 00a8 4FF06408 		mov	r8, #100
 290 00ac 08FB1595 		mls	r5, r8, r5, r9
 291 00b0 2D01     		lsls	r5, r5, #4
 292 00b2 3235     		adds	r5, r5, #50
 293 00b4 A7FB0535 		umull	r3, r5, r7, r5
 294 00b8 6D09     		lsrs	r5, r5, #5
 295 00ba 05F0F005 		and	r5, r5, #240
 296 00be 3544     		add	r5, r5, r6
 297 00c0 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 298              	.LVL28:
 299 00c4 00EB8000 		add	r0, r0, r0, lsl #2
 300 00c8 00EB8000 		add	r0, r0, r0, lsl #2
 301 00cc 6668     		ldr	r6, [r4, #4]
 302 00ce B600     		lsls	r6, r6, #2
 303 00d0 B0FBF6F6 		udiv	r6, r0, r6
 304 00d4 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 305              	.LVL29:
 306 00d8 00EB8000 		add	r0, r0, r0, lsl #2
 307 00dc 00EB8000 		add	r0, r0, r0, lsl #2
 308 00e0 6368     		ldr	r3, [r4, #4]
 309 00e2 9B00     		lsls	r3, r3, #2
 310 00e4 B0FBF3F0 		udiv	r0, r0, r3
 311 00e8 A7FB0030 		umull	r3, r0, r7, r0
 312 00ec 4009     		lsrs	r0, r0, #5
 313 00ee 08FB1068 		mls	r8, r8, r0, r6
 314 00f2 4FEA0818 		lsl	r8, r8, #4
 315 00f6 08F13208 		add	r8, r8, #50
 316 00fa A7FB0837 		umull	r3, r7, r7, r8
 317 00fe C7F34317 		ubfx	r7, r7, #5, #4
 318 0102 2368     		ldr	r3, [r4]
 319 0104 2F44     		add	r7, r7, r5
 320 0106 9F60     		str	r7, [r3, #8]
2522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 321              		.loc 1 2524 0
 322 0108 0DE1     		b	.L11
 323              	.LVL30:
 324              	.L19:
2490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 325              		.loc 1 2490 0
 326 010a 2368     		ldr	r3, [r4]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 51


 327 010c 874A     		ldr	r2, .L20
 328 010e 9342     		cmp	r3, r2
 329 0110 5BD0     		beq	.L13
2490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 330              		.loc 1 2490 0 is_stmt 0 discriminator 1
 331 0112 02F58062 		add	r2, r2, #1024
 332 0116 9342     		cmp	r3, r2
 333 0118 57D0     		beq	.L13
2502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 334              		.loc 1 2502 0 is_stmt 1
 335 011a FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 336              	.LVL31:
 337 011e 00EB8000 		add	r0, r0, r0, lsl #2
 338 0122 00EB8000 		add	r0, r0, r0, lsl #2
 339 0126 6568     		ldr	r5, [r4, #4]
 340 0128 6D00     		lsls	r5, r5, #1
 341 012a B0FBF5F5 		udiv	r5, r0, r5
 342 012e 804F     		ldr	r7, .L20+4
 343 0130 A7FB0535 		umull	r3, r5, r7, r5
 344 0134 6D09     		lsrs	r5, r5, #5
 345 0136 2E01     		lsls	r6, r5, #4
 346 0138 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 347              	.LVL32:
 348 013c 00EB8000 		add	r0, r0, r0, lsl #2
 349 0140 00EB8000 		add	r0, r0, r0, lsl #2
 350 0144 6568     		ldr	r5, [r4, #4]
 351 0146 6D00     		lsls	r5, r5, #1
 352 0148 B0FBF5F9 		udiv	r9, r0, r5
 353 014c FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 354              	.LVL33:
 355 0150 00EB8000 		add	r0, r0, r0, lsl #2
 356 0154 00EB8000 		add	r0, r0, r0, lsl #2
 357 0158 6568     		ldr	r5, [r4, #4]
 358 015a 6D00     		lsls	r5, r5, #1
 359 015c B0FBF5F5 		udiv	r5, r0, r5
 360 0160 A7FB0535 		umull	r3, r5, r7, r5
 361 0164 6D09     		lsrs	r5, r5, #5
 362 0166 4FF06408 		mov	r8, #100
 363 016a 08FB1595 		mls	r5, r8, r5, r9
 364 016e ED00     		lsls	r5, r5, #3
 365 0170 3235     		adds	r5, r5, #50
 366 0172 A7FB0535 		umull	r3, r5, r7, r5
 367 0176 6D09     		lsrs	r5, r5, #5
 368 0178 6D00     		lsls	r5, r5, #1
 369 017a 05F4F875 		and	r5, r5, #496
 370 017e 3544     		add	r5, r5, r6
 371 0180 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 372              	.LVL34:
 373 0184 00EB8000 		add	r0, r0, r0, lsl #2
 374 0188 00EB8000 		add	r0, r0, r0, lsl #2
 375 018c 6668     		ldr	r6, [r4, #4]
 376 018e 7600     		lsls	r6, r6, #1
 377 0190 B0FBF6F6 		udiv	r6, r0, r6
 378 0194 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 379              	.LVL35:
 380 0198 00EB8000 		add	r0, r0, r0, lsl #2
 381 019c 00EB8000 		add	r0, r0, r0, lsl #2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 52


 382 01a0 6368     		ldr	r3, [r4, #4]
 383 01a2 5B00     		lsls	r3, r3, #1
 384 01a4 B0FBF3F3 		udiv	r3, r0, r3
 385 01a8 A7FB0323 		umull	r2, r3, r7, r3
 386 01ac 5B09     		lsrs	r3, r3, #5
 387 01ae 08FB1368 		mls	r8, r8, r3, r6
 388 01b2 4FEAC808 		lsl	r8, r8, #3
 389 01b6 08F13208 		add	r8, r8, #50
 390 01ba A7FB0837 		umull	r3, r7, r7, r8
 391 01be C7F34217 		ubfx	r7, r7, #5, #3
 392 01c2 2368     		ldr	r3, [r4]
 393 01c4 2F44     		add	r7, r7, r5
 394 01c6 9F60     		str	r7, [r3, #8]
 395 01c8 ADE0     		b	.L11
 396              	.LVL36:
 397              	.L13:
2492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 398              		.loc 1 2492 0
 399 01ca FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 400              	.LVL37:
 401 01ce 00EB8000 		add	r0, r0, r0, lsl #2
 402 01d2 00EB8000 		add	r0, r0, r0, lsl #2
 403 01d6 6568     		ldr	r5, [r4, #4]
 404 01d8 6D00     		lsls	r5, r5, #1
 405 01da B0FBF5F5 		udiv	r5, r0, r5
 406 01de 544F     		ldr	r7, .L20+4
 407 01e0 A7FB0535 		umull	r3, r5, r7, r5
 408 01e4 6D09     		lsrs	r5, r5, #5
 409 01e6 2E01     		lsls	r6, r5, #4
 410 01e8 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 411              	.LVL38:
 412 01ec 00EB8000 		add	r0, r0, r0, lsl #2
 413 01f0 00EB8000 		add	r0, r0, r0, lsl #2
 414 01f4 6568     		ldr	r5, [r4, #4]
 415 01f6 6D00     		lsls	r5, r5, #1
 416 01f8 B0FBF5F9 		udiv	r9, r0, r5
 417 01fc FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 418              	.LVL39:
 419 0200 00EB8000 		add	r0, r0, r0, lsl #2
 420 0204 00EB8000 		add	r0, r0, r0, lsl #2
 421 0208 6568     		ldr	r5, [r4, #4]
 422 020a 6D00     		lsls	r5, r5, #1
 423 020c B0FBF5F5 		udiv	r5, r0, r5
 424 0210 A7FB0535 		umull	r3, r5, r7, r5
 425 0214 6D09     		lsrs	r5, r5, #5
 426 0216 4FF06408 		mov	r8, #100
 427 021a 08FB1595 		mls	r5, r8, r5, r9
 428 021e ED00     		lsls	r5, r5, #3
 429 0220 3235     		adds	r5, r5, #50
 430 0222 A7FB0535 		umull	r3, r5, r7, r5
 431 0226 6D09     		lsrs	r5, r5, #5
 432 0228 6D00     		lsls	r5, r5, #1
 433 022a 05F4F875 		and	r5, r5, #496
 434 022e 3544     		add	r5, r5, r6
 435 0230 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 436              	.LVL40:
 437 0234 00EB8000 		add	r0, r0, r0, lsl #2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 53


 438 0238 00EB8000 		add	r0, r0, r0, lsl #2
 439 023c 6668     		ldr	r6, [r4, #4]
 440 023e 7600     		lsls	r6, r6, #1
 441 0240 B0FBF6F6 		udiv	r6, r0, r6
 442 0244 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 443              	.LVL41:
 444 0248 00EB8000 		add	r0, r0, r0, lsl #2
 445 024c 00EB8000 		add	r0, r0, r0, lsl #2
 446 0250 6368     		ldr	r3, [r4, #4]
 447 0252 5B00     		lsls	r3, r3, #1
 448 0254 B0FBF3F3 		udiv	r3, r0, r3
 449 0258 A7FB0323 		umull	r2, r3, r7, r3
 450 025c 5B09     		lsrs	r3, r3, #5
 451 025e 08FB1368 		mls	r8, r8, r3, r6
 452 0262 4FEAC808 		lsl	r8, r8, #3
 453 0266 08F13208 		add	r8, r8, #50
 454 026a A7FB0837 		umull	r3, r7, r7, r8
 455 026e C7F34217 		ubfx	r7, r7, #5, #3
 456 0272 2368     		ldr	r3, [r4]
 457 0274 2F44     		add	r7, r7, r5
 458 0276 9F60     		str	r7, [r3, #8]
 459 0278 55E0     		b	.L11
 460              	.LVL42:
 461              	.L16:
2511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 462              		.loc 1 2511 0
 463 027a FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 464              	.LVL43:
 465 027e 00EB8000 		add	r0, r0, r0, lsl #2
 466 0282 00EB8000 		add	r0, r0, r0, lsl #2
 467 0286 6568     		ldr	r5, [r4, #4]
 468 0288 AD00     		lsls	r5, r5, #2
 469 028a B0FBF5F5 		udiv	r5, r0, r5
 470 028e 284F     		ldr	r7, .L20+4
 471 0290 A7FB0535 		umull	r3, r5, r7, r5
 472 0294 6D09     		lsrs	r5, r5, #5
 473 0296 2E01     		lsls	r6, r5, #4
 474 0298 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 475              	.LVL44:
 476 029c 00EB8000 		add	r0, r0, r0, lsl #2
 477 02a0 00EB8000 		add	r0, r0, r0, lsl #2
 478 02a4 6568     		ldr	r5, [r4, #4]
 479 02a6 AD00     		lsls	r5, r5, #2
 480 02a8 B0FBF5F9 		udiv	r9, r0, r5
 481 02ac FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 482              	.LVL45:
 483 02b0 00EB8000 		add	r0, r0, r0, lsl #2
 484 02b4 00EB8000 		add	r0, r0, r0, lsl #2
 485 02b8 6568     		ldr	r5, [r4, #4]
 486 02ba AD00     		lsls	r5, r5, #2
 487 02bc B0FBF5F5 		udiv	r5, r0, r5
 488 02c0 A7FB0535 		umull	r3, r5, r7, r5
 489 02c4 6D09     		lsrs	r5, r5, #5
 490 02c6 4FF06408 		mov	r8, #100
 491 02ca 08FB1595 		mls	r5, r8, r5, r9
 492 02ce 2D01     		lsls	r5, r5, #4
 493 02d0 3235     		adds	r5, r5, #50
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 54


 494 02d2 A7FB0535 		umull	r3, r5, r7, r5
 495 02d6 6D09     		lsrs	r5, r5, #5
 496 02d8 05F0F005 		and	r5, r5, #240
 497 02dc 3544     		add	r5, r5, r6
 498 02de FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 499              	.LVL46:
 500 02e2 00EB8000 		add	r0, r0, r0, lsl #2
 501 02e6 00EB8000 		add	r0, r0, r0, lsl #2
 502 02ea 6668     		ldr	r6, [r4, #4]
 503 02ec B600     		lsls	r6, r6, #2
 504 02ee B0FBF6F6 		udiv	r6, r0, r6
 505 02f2 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 506              	.LVL47:
 507 02f6 00EB8000 		add	r0, r0, r0, lsl #2
 508 02fa 00EB8000 		add	r0, r0, r0, lsl #2
 509 02fe 6368     		ldr	r3, [r4, #4]
 510 0300 9B00     		lsls	r3, r3, #2
 511 0302 B0FBF3F0 		udiv	r0, r0, r3
 512 0306 A7FB0030 		umull	r3, r0, r7, r0
 513 030a 4009     		lsrs	r0, r0, #5
 514 030c 08FB1068 		mls	r8, r8, r0, r6
 515 0310 4FEA0818 		lsl	r8, r8, #4
 516 0314 08F13208 		add	r8, r8, #50
 517 0318 A7FB0837 		umull	r3, r7, r7, r8
 518 031c C7F34317 		ubfx	r7, r7, #5, #4
 519 0320 2368     		ldr	r3, [r4]
 520 0322 2F44     		add	r7, r7, r5
 521 0324 9F60     		str	r7, [r3, #8]
 522              	.L11:
 523              		.loc 1 2524 0
 524 0326 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 525              	.LVL48:
 526              	.L21:
 527 032a 00BF     		.align	2
 528              	.L20:
 529 032c 00100140 		.word	1073811456
 530 0330 1F85EB51 		.word	1374389535
 531              		.cfi_endproc
 532              	.LFE180:
 534              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 535              		.align	1
 536              		.syntax unified
 537              		.thumb
 538              		.thumb_func
 539              		.fpu fpv4-sp-d16
 541              	UART_WaitOnFlagUntilTimeout:
 542              	.LFB169:
2111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Wait until flag is set */
 543              		.loc 1 2111 0
 544              		.cfi_startproc
 545              		@ args = 4, pretend = 0, frame = 0
 546              		@ frame_needed = 0, uses_anonymous_args = 0
 547              	.LVL49:
 548 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 549              	.LCFI1:
 550              		.cfi_def_cfa_offset 24
 551              		.cfi_offset 4, -24
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 55


 552              		.cfi_offset 5, -20
 553              		.cfi_offset 6, -16
 554              		.cfi_offset 7, -12
 555              		.cfi_offset 8, -8
 556              		.cfi_offset 14, -4
 557 0004 0546     		mov	r5, r0
 558 0006 0F46     		mov	r7, r1
 559 0008 1646     		mov	r6, r2
 560 000a 9846     		mov	r8, r3
 561 000c 069C     		ldr	r4, [sp, #24]
 562              	.LVL50:
 563              	.L24:
2113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 564              		.loc 1 2113 0
 565 000e 2B68     		ldr	r3, [r5]
 566 0010 1B68     		ldr	r3, [r3]
 567 0012 37EA0303 		bics	r3, r7, r3
 568 0016 0CBF     		ite	eq
 569 0018 0123     		moveq	r3, #1
 570 001a 0023     		movne	r3, #0
 571 001c B342     		cmp	r3, r6
 572 001e 1DD1     		bne	.L29
2116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 573              		.loc 1 2116 0
 574 0020 B4F1FF3F 		cmp	r4, #-1
 575 0024 F3D0     		beq	.L24
2118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 576              		.loc 1 2118 0
 577 0026 2CB1     		cbz	r4, .L25
2118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 578              		.loc 1 2118 0 is_stmt 0 discriminator 1
 579 0028 FFF7FEFF 		bl	HAL_GetTick
 580              	.LVL51:
 581 002c A0EB0800 		sub	r0, r0, r8
 582 0030 A042     		cmp	r0, r4
 583 0032 ECD9     		bls	.L24
 584              	.L25:
2121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 585              		.loc 1 2121 0 is_stmt 1
 586 0034 2A68     		ldr	r2, [r5]
 587 0036 D368     		ldr	r3, [r2, #12]
 588 0038 23F4D073 		bic	r3, r3, #416
 589 003c D360     		str	r3, [r2, #12]
2122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 590              		.loc 1 2122 0
 591 003e 2A68     		ldr	r2, [r5]
 592 0040 5369     		ldr	r3, [r2, #20]
 593 0042 23F00103 		bic	r3, r3, #1
 594 0046 5361     		str	r3, [r2, #20]
2124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 595              		.loc 1 2124 0
 596 0048 2023     		movs	r3, #32
 597 004a 85F83930 		strb	r3, [r5, #57]
2125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 598              		.loc 1 2125 0
 599 004e 85F83A30 		strb	r3, [r5, #58]
2128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 56


 600              		.loc 1 2128 0
 601 0052 0023     		movs	r3, #0
 602 0054 85F83830 		strb	r3, [r5, #56]
2130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 603              		.loc 1 2130 0
 604 0058 0320     		movs	r0, #3
 605 005a 00E0     		b	.L26
 606              	.L29:
2135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 607              		.loc 1 2135 0
 608 005c 0020     		movs	r0, #0
 609              	.L26:
2136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 610              		.loc 1 2136 0
 611 005e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 612              		.cfi_endproc
 613              	.LFE169:
 615              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 616              		.align	1
 617              		.weak	HAL_UART_MspInit
 618              		.syntax unified
 619              		.thumb
 620              		.thumb_func
 621              		.fpu fpv4-sp-d16
 623              	HAL_UART_MspInit:
 624              	.LFB131:
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    /* Prevent unused argument(s) compilation warning */
 625              		.loc 1 530 0
 626              		.cfi_startproc
 627              		@ args = 0, pretend = 0, frame = 0
 628              		@ frame_needed = 0, uses_anonymous_args = 0
 629              		@ link register save eliminated.
 630              	.LVL52:
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 631              		.loc 1 536 0
 632 0000 7047     		bx	lr
 633              		.cfi_endproc
 634              	.LFE131:
 636              		.section	.text.HAL_UART_Init,"ax",%progbits
 637              		.align	1
 638              		.global	HAL_UART_Init
 639              		.syntax unified
 640              		.thumb
 641              		.thumb_func
 642              		.fpu fpv4-sp-d16
 644              	HAL_UART_Init:
 645              	.LFB126:
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 646              		.loc 1 247 0
 647              		.cfi_startproc
 648              		@ args = 0, pretend = 0, frame = 0
 649              		@ frame_needed = 0, uses_anonymous_args = 0
 650              	.LVL53:
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 651              		.loc 1 249 0
 652 0000 58B3     		cbz	r0, .L34
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 57


 653              		.loc 1 247 0
 654 0002 10B5     		push	{r4, lr}
 655              	.LCFI2:
 656              		.cfi_def_cfa_offset 8
 657              		.cfi_offset 4, -8
 658              		.cfi_offset 14, -4
 659 0004 0446     		mov	r4, r0
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {  
 660              		.loc 1 268 0
 661 0006 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 662 000a 0BB3     		cbz	r3, .L39
 663              	.LVL54:
 664              	.L33:
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 665              		.loc 1 276 0
 666 000c 2423     		movs	r3, #36
 667 000e 84F83930 		strb	r3, [r4, #57]
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 668              		.loc 1 279 0
 669 0012 2268     		ldr	r2, [r4]
 670 0014 D368     		ldr	r3, [r2, #12]
 671 0016 23F40053 		bic	r3, r3, #8192
 672 001a D360     		str	r3, [r2, #12]
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 673              		.loc 1 282 0
 674 001c 2046     		mov	r0, r4
 675 001e FFF7FEFF 		bl	UART_SetConfig
 676              	.LVL55:
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 677              		.loc 1 287 0
 678 0022 2268     		ldr	r2, [r4]
 679 0024 1369     		ldr	r3, [r2, #16]
 680 0026 23F49043 		bic	r3, r3, #18432
 681 002a 1361     		str	r3, [r2, #16]
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 682              		.loc 1 288 0
 683 002c 2268     		ldr	r2, [r4]
 684 002e 5369     		ldr	r3, [r2, #20]
 685 0030 23F02A03 		bic	r3, r3, #42
 686 0034 5361     		str	r3, [r2, #20]
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 687              		.loc 1 291 0
 688 0036 2268     		ldr	r2, [r4]
 689 0038 D368     		ldr	r3, [r2, #12]
 690 003a 43F40053 		orr	r3, r3, #8192
 691 003e D360     		str	r3, [r2, #12]
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 692              		.loc 1 294 0
 693 0040 0020     		movs	r0, #0
 694 0042 E063     		str	r0, [r4, #60]
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 695              		.loc 1 295 0
 696 0044 2023     		movs	r3, #32
 697 0046 84F83930 		strb	r3, [r4, #57]
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 698              		.loc 1 296 0
 699 004a 84F83A30 		strb	r3, [r4, #58]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 58


 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 700              		.loc 1 299 0
 701 004e 10BD     		pop	{r4, pc}
 702              	.LVL56:
 703              	.L39:
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 704              		.loc 1 271 0
 705 0050 80F83830 		strb	r3, [r0, #56]
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 706              		.loc 1 273 0
 707 0054 FFF7FEFF 		bl	HAL_UART_MspInit
 708              	.LVL57:
 709 0058 D8E7     		b	.L33
 710              	.LVL58:
 711              	.L34:
 712              	.LCFI3:
 713              		.cfi_def_cfa_offset 0
 714              		.cfi_restore 4
 715              		.cfi_restore 14
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 716              		.loc 1 251 0
 717 005a 0120     		movs	r0, #1
 718              	.LVL59:
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 719              		.loc 1 299 0
 720 005c 7047     		bx	lr
 721              		.cfi_endproc
 722              	.LFE126:
 724              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 725              		.align	1
 726              		.global	HAL_HalfDuplex_Init
 727              		.syntax unified
 728              		.thumb
 729              		.thumb_func
 730              		.fpu fpv4-sp-d16
 732              	HAL_HalfDuplex_Init:
 733              	.LFB127:
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 734              		.loc 1 309 0
 735              		.cfi_startproc
 736              		@ args = 0, pretend = 0, frame = 0
 737              		@ frame_needed = 0, uses_anonymous_args = 0
 738              	.LVL60:
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 739              		.loc 1 311 0
 740 0000 0028     		cmp	r0, #0
 741 0002 30D0     		beq	.L43
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 742              		.loc 1 309 0
 743 0004 10B5     		push	{r4, lr}
 744              	.LCFI4:
 745              		.cfi_def_cfa_offset 8
 746              		.cfi_offset 4, -8
 747              		.cfi_offset 14, -4
 748 0006 0446     		mov	r4, r0
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 749              		.loc 1 321 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 59


 750 0008 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 751 000c 33B3     		cbz	r3, .L48
 752              	.LVL61:
 753              	.L42:
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 754              		.loc 1 329 0
 755 000e 2423     		movs	r3, #36
 756 0010 84F83930 		strb	r3, [r4, #57]
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 757              		.loc 1 332 0
 758 0014 2268     		ldr	r2, [r4]
 759 0016 D368     		ldr	r3, [r2, #12]
 760 0018 23F40053 		bic	r3, r3, #8192
 761 001c D360     		str	r3, [r2, #12]
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 762              		.loc 1 335 0
 763 001e 2046     		mov	r0, r4
 764 0020 FFF7FEFF 		bl	UART_SetConfig
 765              	.LVL62:
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 766              		.loc 1 340 0
 767 0024 2268     		ldr	r2, [r4]
 768 0026 1369     		ldr	r3, [r2, #16]
 769 0028 23F49043 		bic	r3, r3, #18432
 770 002c 1361     		str	r3, [r2, #16]
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 771              		.loc 1 341 0
 772 002e 2268     		ldr	r2, [r4]
 773 0030 5369     		ldr	r3, [r2, #20]
 774 0032 23F02203 		bic	r3, r3, #34
 775 0036 5361     		str	r3, [r2, #20]
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
 776              		.loc 1 344 0
 777 0038 2268     		ldr	r2, [r4]
 778 003a 5369     		ldr	r3, [r2, #20]
 779 003c 43F00803 		orr	r3, r3, #8
 780 0040 5361     		str	r3, [r2, #20]
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 781              		.loc 1 347 0
 782 0042 2268     		ldr	r2, [r4]
 783 0044 D368     		ldr	r3, [r2, #12]
 784 0046 43F40053 		orr	r3, r3, #8192
 785 004a D360     		str	r3, [r2, #12]
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 786              		.loc 1 350 0
 787 004c 0020     		movs	r0, #0
 788 004e E063     		str	r0, [r4, #60]
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 789              		.loc 1 351 0
 790 0050 2023     		movs	r3, #32
 791 0052 84F83930 		strb	r3, [r4, #57]
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 792              		.loc 1 352 0
 793 0056 84F83A30 		strb	r3, [r4, #58]
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 794              		.loc 1 355 0
 795 005a 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 60


 796              	.LVL63:
 797              	.L48:
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 798              		.loc 1 324 0
 799 005c 80F83830 		strb	r3, [r0, #56]
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 800              		.loc 1 326 0
 801 0060 FFF7FEFF 		bl	HAL_UART_MspInit
 802              	.LVL64:
 803 0064 D3E7     		b	.L42
 804              	.LVL65:
 805              	.L43:
 806              	.LCFI5:
 807              		.cfi_def_cfa_offset 0
 808              		.cfi_restore 4
 809              		.cfi_restore 14
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 810              		.loc 1 313 0
 811 0066 0120     		movs	r0, #1
 812              	.LVL66:
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 813              		.loc 1 355 0
 814 0068 7047     		bx	lr
 815              		.cfi_endproc
 816              	.LFE127:
 818              		.section	.text.HAL_LIN_Init,"ax",%progbits
 819              		.align	1
 820              		.global	HAL_LIN_Init
 821              		.syntax unified
 822              		.thumb
 823              		.thumb_func
 824              		.fpu fpv4-sp-d16
 826              	HAL_LIN_Init:
 827              	.LFB128:
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 828              		.loc 1 369 0
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 0
 831              		@ frame_needed = 0, uses_anonymous_args = 0
 832              	.LVL67:
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 833              		.loc 1 371 0
 834 0000 0028     		cmp	r0, #0
 835 0002 3BD0     		beq	.L52
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 836              		.loc 1 369 0
 837 0004 38B5     		push	{r3, r4, r5, lr}
 838              	.LCFI6:
 839              		.cfi_def_cfa_offset 16
 840              		.cfi_offset 3, -16
 841              		.cfi_offset 4, -12
 842              		.cfi_offset 5, -8
 843              		.cfi_offset 14, -4
 844 0006 0446     		mov	r4, r0
 845 0008 0D46     		mov	r5, r1
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 846              		.loc 1 382 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 61


 847 000a 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 848 000e 002B     		cmp	r3, #0
 849 0010 2FD0     		beq	.L57
 850              	.LVL68:
 851              	.L51:
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 852              		.loc 1 390 0
 853 0012 2423     		movs	r3, #36
 854 0014 84F83930 		strb	r3, [r4, #57]
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 855              		.loc 1 393 0
 856 0018 2268     		ldr	r2, [r4]
 857 001a D368     		ldr	r3, [r2, #12]
 858 001c 23F40053 		bic	r3, r3, #8192
 859 0020 D360     		str	r3, [r2, #12]
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 860              		.loc 1 396 0
 861 0022 2046     		mov	r0, r4
 862 0024 FFF7FEFF 		bl	UART_SetConfig
 863              	.LVL69:
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 864              		.loc 1 401 0
 865 0028 2268     		ldr	r2, [r4]
 866 002a 1369     		ldr	r3, [r2, #16]
 867 002c 23F40063 		bic	r3, r3, #2048
 868 0030 1361     		str	r3, [r2, #16]
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 869              		.loc 1 402 0
 870 0032 2268     		ldr	r2, [r4]
 871 0034 5369     		ldr	r3, [r2, #20]
 872 0036 23F02A03 		bic	r3, r3, #42
 873 003a 5361     		str	r3, [r2, #20]
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 874              		.loc 1 405 0
 875 003c 2268     		ldr	r2, [r4]
 876 003e 1369     		ldr	r3, [r2, #16]
 877 0040 43F48043 		orr	r3, r3, #16384
 878 0044 1361     		str	r3, [r2, #16]
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 879              		.loc 1 408 0
 880 0046 2268     		ldr	r2, [r4]
 881 0048 1369     		ldr	r3, [r2, #16]
 882 004a 23F02003 		bic	r3, r3, #32
 883 004e 1361     		str	r3, [r2, #16]
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 884              		.loc 1 409 0
 885 0050 2368     		ldr	r3, [r4]
 886 0052 1969     		ldr	r1, [r3, #16]
 887 0054 0D43     		orrs	r5, r5, r1
 888              	.LVL70:
 889 0056 1D61     		str	r5, [r3, #16]
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 890              		.loc 1 412 0
 891 0058 2268     		ldr	r2, [r4]
 892 005a D368     		ldr	r3, [r2, #12]
 893 005c 43F40053 		orr	r3, r3, #8192
 894 0060 D360     		str	r3, [r2, #12]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 62


 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 895              		.loc 1 415 0
 896 0062 0020     		movs	r0, #0
 897 0064 E063     		str	r0, [r4, #60]
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 898              		.loc 1 416 0
 899 0066 2023     		movs	r3, #32
 900 0068 84F83930 		strb	r3, [r4, #57]
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 901              		.loc 1 417 0
 902 006c 84F83A30 		strb	r3, [r4, #58]
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 903              		.loc 1 420 0
 904 0070 38BD     		pop	{r3, r4, r5, pc}
 905              	.LVL71:
 906              	.L57:
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 907              		.loc 1 385 0
 908 0072 80F83830 		strb	r3, [r0, #56]
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 909              		.loc 1 387 0
 910 0076 FFF7FEFF 		bl	HAL_UART_MspInit
 911              	.LVL72:
 912 007a CAE7     		b	.L51
 913              	.LVL73:
 914              	.L52:
 915              	.LCFI7:
 916              		.cfi_def_cfa_offset 0
 917              		.cfi_restore 3
 918              		.cfi_restore 4
 919              		.cfi_restore 5
 920              		.cfi_restore 14
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 921              		.loc 1 373 0
 922 007c 0120     		movs	r0, #1
 923              	.LVL74:
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 924              		.loc 1 420 0
 925 007e 7047     		bx	lr
 926              		.cfi_endproc
 927              	.LFE128:
 929              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 930              		.align	1
 931              		.global	HAL_MultiProcessor_Init
 932              		.syntax unified
 933              		.thumb
 934              		.thumb_func
 935              		.fpu fpv4-sp-d16
 937              	HAL_MultiProcessor_Init:
 938              	.LFB129:
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 939              		.loc 1 435 0
 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 0
 942              		@ frame_needed = 0, uses_anonymous_args = 0
 943              	.LVL75:
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 63


 944              		.loc 1 437 0
 945 0000 0028     		cmp	r0, #0
 946 0002 40D0     		beq	.L61
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 947              		.loc 1 435 0
 948 0004 70B5     		push	{r4, r5, r6, lr}
 949              	.LCFI8:
 950              		.cfi_def_cfa_offset 16
 951              		.cfi_offset 4, -16
 952              		.cfi_offset 5, -12
 953              		.cfi_offset 6, -8
 954              		.cfi_offset 14, -4
 955 0006 0446     		mov	r4, r0
 956 0008 1646     		mov	r6, r2
 957 000a 0D46     		mov	r5, r1
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 958              		.loc 1 449 0
 959 000c 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 960 0010 002B     		cmp	r3, #0
 961 0012 33D0     		beq	.L66
 962              	.LVL76:
 963              	.L60:
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 964              		.loc 1 457 0
 965 0014 2423     		movs	r3, #36
 966 0016 84F83930 		strb	r3, [r4, #57]
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 967              		.loc 1 460 0
 968 001a 2268     		ldr	r2, [r4]
 969 001c D368     		ldr	r3, [r2, #12]
 970 001e 23F40053 		bic	r3, r3, #8192
 971 0022 D360     		str	r3, [r2, #12]
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 972              		.loc 1 463 0
 973 0024 2046     		mov	r0, r4
 974 0026 FFF7FEFF 		bl	UART_SetConfig
 975              	.LVL77:
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 976              		.loc 1 468 0
 977 002a 2268     		ldr	r2, [r4]
 978 002c 1369     		ldr	r3, [r2, #16]
 979 002e 23F49043 		bic	r3, r3, #18432
 980 0032 1361     		str	r3, [r2, #16]
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 981              		.loc 1 469 0
 982 0034 2268     		ldr	r2, [r4]
 983 0036 5369     		ldr	r3, [r2, #20]
 984 0038 23F02A03 		bic	r3, r3, #42
 985 003c 5361     		str	r3, [r2, #20]
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART address node */
 986              		.loc 1 472 0
 987 003e 2268     		ldr	r2, [r4]
 988 0040 1369     		ldr	r3, [r2, #16]
 989 0042 23F00F03 		bic	r3, r3, #15
 990 0046 1361     		str	r3, [r2, #16]
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 991              		.loc 1 474 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 64


 992 0048 2368     		ldr	r3, [r4]
 993 004a 1969     		ldr	r1, [r3, #16]
 994 004c 0D43     		orrs	r5, r5, r1
 995 004e 1D61     		str	r5, [r3, #16]
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 996              		.loc 1 477 0
 997 0050 2268     		ldr	r2, [r4]
 998 0052 D368     		ldr	r3, [r2, #12]
 999 0054 23F40063 		bic	r3, r3, #2048
 1000 0058 D360     		str	r3, [r2, #12]
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1001              		.loc 1 478 0
 1002 005a 2168     		ldr	r1, [r4]
 1003 005c CB68     		ldr	r3, [r1, #12]
 1004 005e 3343     		orrs	r3, r3, r6
 1005 0060 CB60     		str	r3, [r1, #12]
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1006              		.loc 1 481 0
 1007 0062 2268     		ldr	r2, [r4]
 1008 0064 D368     		ldr	r3, [r2, #12]
 1009 0066 43F40053 		orr	r3, r3, #8192
 1010 006a D360     		str	r3, [r2, #12]
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 1011              		.loc 1 484 0
 1012 006c 0020     		movs	r0, #0
 1013 006e E063     		str	r0, [r4, #60]
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 1014              		.loc 1 485 0
 1015 0070 2023     		movs	r3, #32
 1016 0072 84F83930 		strb	r3, [r4, #57]
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1017              		.loc 1 486 0
 1018 0076 84F83A30 		strb	r3, [r4, #58]
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1019              		.loc 1 489 0
 1020 007a 70BD     		pop	{r4, r5, r6, pc}
 1021              	.LVL78:
 1022              	.L66:
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 1023              		.loc 1 452 0
 1024 007c 80F83830 		strb	r3, [r0, #56]
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1025              		.loc 1 454 0
 1026 0080 FFF7FEFF 		bl	HAL_UART_MspInit
 1027              	.LVL79:
 1028 0084 C6E7     		b	.L60
 1029              	.LVL80:
 1030              	.L61:
 1031              	.LCFI9:
 1032              		.cfi_def_cfa_offset 0
 1033              		.cfi_restore 4
 1034              		.cfi_restore 5
 1035              		.cfi_restore 6
 1036              		.cfi_restore 14
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1037              		.loc 1 439 0
 1038 0086 0120     		movs	r0, #1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 65


 1039              	.LVL81:
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1040              		.loc 1 489 0
 1041 0088 7047     		bx	lr
 1042              		.cfi_endproc
 1043              	.LFE129:
 1045              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 1046              		.align	1
 1047              		.weak	HAL_UART_MspDeInit
 1048              		.syntax unified
 1049              		.thumb
 1050              		.thumb_func
 1051              		.fpu fpv4-sp-d16
 1053              	HAL_UART_MspDeInit:
 1054              	.LFB132:
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1055              		.loc 1 545 0
 1056              		.cfi_startproc
 1057              		@ args = 0, pretend = 0, frame = 0
 1058              		@ frame_needed = 0, uses_anonymous_args = 0
 1059              		@ link register save eliminated.
 1060              	.LVL82:
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1061              		.loc 1 551 0
 1062 0000 7047     		bx	lr
 1063              		.cfi_endproc
 1064              	.LFE132:
 1066              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 1067              		.align	1
 1068              		.global	HAL_UART_DeInit
 1069              		.syntax unified
 1070              		.thumb
 1071              		.thumb_func
 1072              		.fpu fpv4-sp-d16
 1074              	HAL_UART_DeInit:
 1075              	.LFB130:
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 1076              		.loc 1 498 0
 1077              		.cfi_startproc
 1078              		@ args = 0, pretend = 0, frame = 0
 1079              		@ frame_needed = 0, uses_anonymous_args = 0
 1080              	.LVL83:
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1081              		.loc 1 500 0
 1082 0000 78B1     		cbz	r0, .L70
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 1083              		.loc 1 498 0
 1084 0002 10B5     		push	{r4, lr}
 1085              	.LCFI10:
 1086              		.cfi_def_cfa_offset 8
 1087              		.cfi_offset 4, -8
 1088              		.cfi_offset 14, -4
 1089 0004 0446     		mov	r4, r0
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1090              		.loc 1 508 0
 1091 0006 2423     		movs	r3, #36
 1092 0008 80F83930 		strb	r3, [r0, #57]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 66


 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1093              		.loc 1 511 0
 1094 000c FFF7FEFF 		bl	HAL_UART_MspDeInit
 1095              	.LVL84:
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 1096              		.loc 1 513 0
 1097 0010 0020     		movs	r0, #0
 1098 0012 E063     		str	r0, [r4, #60]
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 1099              		.loc 1 514 0
 1100 0014 84F83900 		strb	r0, [r4, #57]
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1101              		.loc 1 515 0
 1102 0018 84F83A00 		strb	r0, [r4, #58]
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1103              		.loc 1 518 0
 1104 001c 84F83800 		strb	r0, [r4, #56]
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1105              		.loc 1 521 0
 1106 0020 10BD     		pop	{r4, pc}
 1107              	.LVL85:
 1108              	.L70:
 1109              	.LCFI11:
 1110              		.cfi_def_cfa_offset 0
 1111              		.cfi_restore 4
 1112              		.cfi_restore 14
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1113              		.loc 1 502 0
 1114 0022 0120     		movs	r0, #1
 1115              	.LVL86:
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1116              		.loc 1 521 0
 1117 0024 7047     		bx	lr
 1118              		.cfi_endproc
 1119              	.LFE130:
 1121              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 1122              		.align	1
 1123              		.global	HAL_UART_Transmit
 1124              		.syntax unified
 1125              		.thumb
 1126              		.thumb_func
 1127              		.fpu fpv4-sp-d16
 1129              	HAL_UART_Transmit:
 1130              	.LFB133:
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
 1131              		.loc 1 619 0
 1132              		.cfi_startproc
 1133              		@ args = 0, pretend = 0, frame = 0
 1134              		@ frame_needed = 0, uses_anonymous_args = 0
 1135              	.LVL87:
 1136 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1137              	.LCFI12:
 1138              		.cfi_def_cfa_offset 24
 1139              		.cfi_offset 4, -24
 1140              		.cfi_offset 5, -20
 1141              		.cfi_offset 6, -16
 1142              		.cfi_offset 7, -12
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 67


 1143              		.cfi_offset 8, -8
 1144              		.cfi_offset 14, -4
 1145 0004 82B0     		sub	sp, sp, #8
 1146              	.LCFI13:
 1147              		.cfi_def_cfa_offset 32
 1148 0006 1E46     		mov	r6, r3
 1149              	.LVL88:
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1150              		.loc 1 624 0
 1151 0008 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1152              	.LVL89:
 1153 000c DBB2     		uxtb	r3, r3
 1154 000e 202B     		cmp	r3, #32
 1155 0010 55D1     		bne	.L82
 1156 0012 0446     		mov	r4, r0
 1157 0014 0D46     		mov	r5, r1
 1158 0016 9046     		mov	r8, r2
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1159              		.loc 1 626 0
 1160 0018 0029     		cmp	r1, #0
 1161 001a 55D0     		beq	.L83
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1162              		.loc 1 626 0 is_stmt 0 discriminator 1
 1163 001c 002A     		cmp	r2, #0
 1164 001e 55D0     		beq	.L84
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1165              		.loc 1 632 0 is_stmt 1
 1166 0020 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1167 0024 012B     		cmp	r3, #1
 1168 0026 53D0     		beq	.L85
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1169              		.loc 1 632 0 is_stmt 0 discriminator 2
 1170 0028 0123     		movs	r3, #1
 1171 002a 80F83830 		strb	r3, [r0, #56]
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1172              		.loc 1 634 0 is_stmt 1 discriminator 2
 1173 002e 0023     		movs	r3, #0
 1174 0030 C363     		str	r3, [r0, #60]
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
 1175              		.loc 1 635 0 discriminator 2
 1176 0032 2123     		movs	r3, #33
 1177 0034 80F83930 		strb	r3, [r0, #57]
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1178              		.loc 1 638 0 discriminator 2
 1179 0038 FFF7FEFF 		bl	HAL_GetTick
 1180              	.LVL90:
 1181 003c 0746     		mov	r7, r0
 1182              	.LVL91:
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1183              		.loc 1 640 0 discriminator 2
 1184 003e A4F82480 		strh	r8, [r4, #36]	@ movhi
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 1185              		.loc 1 641 0 discriminator 2
 1186 0042 A4F82680 		strh	r8, [r4, #38]	@ movhi
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1187              		.loc 1 642 0 discriminator 2
 1188 0046 10E0     		b	.L77
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 68


 1189              	.LVL92:
 1190              	.L91:
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 1191              		.loc 1 647 0
 1192 0048 0096     		str	r6, [sp]
 1193 004a 3B46     		mov	r3, r7
 1194 004c 0022     		movs	r2, #0
 1195 004e 8021     		movs	r1, #128
 1196 0050 2046     		mov	r0, r4
 1197 0052 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1198              	.LVL93:
 1199 0056 0028     		cmp	r0, #0
 1200 0058 3CD1     		bne	.L86
 1201              	.LVL94:
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 1202              		.loc 1 652 0
 1203 005a 2B88     		ldrh	r3, [r5]
 1204 005c 2268     		ldr	r2, [r4]
 1205 005e C3F30803 		ubfx	r3, r3, #0, #9
 1206 0062 5360     		str	r3, [r2, #4]
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 1207              		.loc 1 653 0
 1208 0064 2369     		ldr	r3, [r4, #16]
 1209 0066 C3B9     		cbnz	r3, .L79
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1210              		.loc 1 655 0
 1211 0068 0235     		adds	r5, r5, #2
 1212              	.LVL95:
 1213              	.L77:
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1214              		.loc 1 642 0
 1215 006a E38C     		ldrh	r3, [r4, #38]
 1216 006c 9BB2     		uxth	r3, r3
 1217 006e B3B1     		cbz	r3, .L90
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 1218              		.loc 1 644 0
 1219 0070 E38C     		ldrh	r3, [r4, #38]
 1220 0072 013B     		subs	r3, r3, #1
 1221 0074 9BB2     		uxth	r3, r3
 1222 0076 E384     		strh	r3, [r4, #38]	@ movhi
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 1223              		.loc 1 645 0
 1224 0078 A368     		ldr	r3, [r4, #8]
 1225 007a B3F5805F 		cmp	r3, #4096
 1226 007e E3D0     		beq	.L91
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 1227              		.loc 1 664 0
 1228 0080 0096     		str	r6, [sp]
 1229 0082 3B46     		mov	r3, r7
 1230 0084 0022     		movs	r2, #0
 1231 0086 8021     		movs	r1, #128
 1232 0088 2046     		mov	r0, r4
 1233 008a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1234              	.LVL96:
 1235 008e 18BB     		cbnz	r0, .L87
 1236              	.LVL97:
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       } 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 69


 1237              		.loc 1 668 0
 1238 0090 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 1239 0092 2368     		ldr	r3, [r4]
 1240 0094 5A60     		str	r2, [r3, #4]
 1241 0096 0135     		adds	r5, r5, #1
 1242              	.LVL98:
 1243 0098 E7E7     		b	.L77
 1244              	.LVL99:
 1245              	.L79:
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1246              		.loc 1 659 0
 1247 009a 0135     		adds	r5, r5, #1
 1248              	.LVL100:
 1249 009c E5E7     		b	.L77
 1250              	.LVL101:
 1251              	.L90:
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
 1252              		.loc 1 672 0
 1253 009e 0096     		str	r6, [sp]
 1254 00a0 3B46     		mov	r3, r7
 1255 00a2 0022     		movs	r2, #0
 1256 00a4 4021     		movs	r1, #64
 1257 00a6 2046     		mov	r0, r4
 1258 00a8 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1259              	.LVL102:
 1260 00ac 0346     		mov	r3, r0
 1261 00ae A8B9     		cbnz	r0, .L88
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1262              		.loc 1 678 0
 1263 00b0 2022     		movs	r2, #32
 1264 00b2 84F83920 		strb	r2, [r4, #57]
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1265              		.loc 1 681 0
 1266 00b6 0022     		movs	r2, #0
 1267 00b8 84F83820 		strb	r2, [r4, #56]
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1268              		.loc 1 683 0
 1269 00bc 00E0     		b	.L76
 1270              	.LVL103:
 1271              	.L82:
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1272              		.loc 1 687 0
 1273 00be 0223     		movs	r3, #2
 1274              	.LVL104:
 1275              	.L76:
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1276              		.loc 1 689 0
 1277 00c0 1846     		mov	r0, r3
 1278 00c2 02B0     		add	sp, sp, #8
 1279              	.LCFI14:
 1280              		.cfi_remember_state
 1281              		.cfi_def_cfa_offset 24
 1282              		@ sp needed
 1283 00c4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1284              	.LVL105:
 1285              	.L83:
 1286              	.LCFI15:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 70


 1287              		.cfi_restore_state
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1288              		.loc 1 628 0
 1289 00c8 0123     		movs	r3, #1
 1290 00ca F9E7     		b	.L76
 1291              	.L84:
 1292 00cc 0123     		movs	r3, #1
 1293 00ce F7E7     		b	.L76
 1294              	.L85:
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1295              		.loc 1 632 0
 1296 00d0 0223     		movs	r3, #2
 1297 00d2 F5E7     		b	.L76
 1298              	.LVL106:
 1299              	.L86:
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1300              		.loc 1 649 0
 1301 00d4 0323     		movs	r3, #3
 1302 00d6 F3E7     		b	.L76
 1303              	.L87:
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1304              		.loc 1 666 0
 1305 00d8 0323     		movs	r3, #3
 1306 00da F1E7     		b	.L76
 1307              	.L88:
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1308              		.loc 1 674 0
 1309 00dc 0323     		movs	r3, #3
 1310 00de EFE7     		b	.L76
 1311              		.cfi_endproc
 1312              	.LFE133:
 1314              		.section	.text.HAL_UART_Receive,"ax",%progbits
 1315              		.align	1
 1316              		.global	HAL_UART_Receive
 1317              		.syntax unified
 1318              		.thumb
 1319              		.thumb_func
 1320              		.fpu fpv4-sp-d16
 1322              	HAL_UART_Receive:
 1323              	.LFB134:
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
 1324              		.loc 1 701 0
 1325              		.cfi_startproc
 1326              		@ args = 0, pretend = 0, frame = 0
 1327              		@ frame_needed = 0, uses_anonymous_args = 0
 1328              	.LVL107:
 1329 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1330              	.LCFI16:
 1331              		.cfi_def_cfa_offset 24
 1332              		.cfi_offset 4, -24
 1333              		.cfi_offset 5, -20
 1334              		.cfi_offset 6, -16
 1335              		.cfi_offset 7, -12
 1336              		.cfi_offset 8, -8
 1337              		.cfi_offset 14, -4
 1338 0004 82B0     		sub	sp, sp, #8
 1339              	.LCFI17:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 71


 1340              		.cfi_def_cfa_offset 32
 1341 0006 1E46     		mov	r6, r3
 1342              	.LVL108:
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 1343              		.loc 1 706 0
 1344 0008 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1345              	.LVL109:
 1346 000c DBB2     		uxtb	r3, r3
 1347 000e 202B     		cmp	r3, #32
 1348 0010 5AD1     		bne	.L100
 1349 0012 0446     		mov	r4, r0
 1350 0014 0D46     		mov	r5, r1
 1351 0016 9046     		mov	r8, r2
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1352              		.loc 1 708 0
 1353 0018 0029     		cmp	r1, #0
 1354 001a 59D0     		beq	.L101
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1355              		.loc 1 708 0 is_stmt 0 discriminator 1
 1356 001c 002A     		cmp	r2, #0
 1357 001e 59D0     		beq	.L102
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1358              		.loc 1 714 0 is_stmt 1
 1359 0020 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1360 0024 012B     		cmp	r3, #1
 1361 0026 57D0     		beq	.L103
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1362              		.loc 1 714 0 is_stmt 0 discriminator 2
 1363 0028 0123     		movs	r3, #1
 1364 002a 80F83830 		strb	r3, [r0, #56]
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1365              		.loc 1 716 0 is_stmt 1 discriminator 2
 1366 002e 0023     		movs	r3, #0
 1367 0030 C363     		str	r3, [r0, #60]
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
 1368              		.loc 1 717 0 discriminator 2
 1369 0032 2223     		movs	r3, #34
 1370 0034 80F83A30 		strb	r3, [r0, #58]
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 1371              		.loc 1 720 0 discriminator 2
 1372 0038 FFF7FEFF 		bl	HAL_GetTick
 1373              	.LVL110:
 1374 003c 0746     		mov	r7, r0
 1375              	.LVL111:
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1376              		.loc 1 722 0 discriminator 2
 1377 003e A4F82C80 		strh	r8, [r4, #44]	@ movhi
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1378              		.loc 1 723 0 discriminator 2
 1379 0042 A4F82E80 		strh	r8, [r4, #46]	@ movhi
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1380              		.loc 1 726 0 discriminator 2
 1381 0046 1DE0     		b	.L94
 1382              	.LVL112:
 1383              	.L108:
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 1384              		.loc 1 731 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 72


 1385 0048 0096     		str	r6, [sp]
 1386 004a 3B46     		mov	r3, r7
 1387 004c 0022     		movs	r2, #0
 1388 004e 2021     		movs	r1, #32
 1389 0050 2046     		mov	r0, r4
 1390 0052 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1391              	.LVL113:
 1392 0056 0028     		cmp	r0, #0
 1393 0058 40D1     		bne	.L104
 1394              	.LVL114:
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 1395              		.loc 1 736 0
 1396 005a 2369     		ldr	r3, [r4, #16]
 1397 005c 33B9     		cbnz	r3, .L96
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=2U;
 1398              		.loc 1 738 0
 1399 005e 2368     		ldr	r3, [r4]
 1400 0060 5B68     		ldr	r3, [r3, #4]
 1401 0062 C3F30803 		ubfx	r3, r3, #0, #9
 1402 0066 25F8023B 		strh	r3, [r5], #2	@ movhi
 1403              	.LVL115:
 1404 006a 0BE0     		b	.L94
 1405              	.LVL116:
 1406              	.L96:
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=1U;
 1407              		.loc 1 743 0
 1408 006c 2368     		ldr	r3, [r4]
 1409 006e 5B68     		ldr	r3, [r3, #4]
 1410 0070 DBB2     		uxtb	r3, r3
 1411 0072 25F8013B 		strh	r3, [r5], #1	@ movhi
 1412              	.LVL117:
 1413 0076 05E0     		b	.L94
 1414              	.LVL118:
 1415              	.L98:
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1416              		.loc 1 760 0
 1417 0078 2368     		ldr	r3, [r4]
 1418 007a 5B68     		ldr	r3, [r3, #4]
 1419              	.LVL119:
 1420 007c 03F07F03 		and	r3, r3, #127
 1421 0080 2B70     		strb	r3, [r5]
 1422 0082 0135     		adds	r5, r5, #1
 1423              	.LVL120:
 1424              	.L94:
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1425              		.loc 1 726 0
 1426 0084 E38D     		ldrh	r3, [r4, #46]
 1427 0086 9BB2     		uxth	r3, r3
 1428 0088 BBB1     		cbz	r3, .L107
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 1429              		.loc 1 728 0
 1430 008a E38D     		ldrh	r3, [r4, #46]
 1431 008c 013B     		subs	r3, r3, #1
 1432 008e 9BB2     		uxth	r3, r3
 1433 0090 E385     		strh	r3, [r4, #46]	@ movhi
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 1434              		.loc 1 729 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 73


 1435 0092 A368     		ldr	r3, [r4, #8]
 1436 0094 B3F5805F 		cmp	r3, #4096
 1437 0098 D6D0     		beq	.L108
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 1438              		.loc 1 750 0
 1439 009a 0096     		str	r6, [sp]
 1440 009c 3B46     		mov	r3, r7
 1441 009e 0022     		movs	r2, #0
 1442 00a0 2021     		movs	r1, #32
 1443 00a2 2046     		mov	r0, r4
 1444 00a4 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1445              	.LVL121:
 1446 00a8 D0B9     		cbnz	r0, .L105
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 1447              		.loc 1 754 0
 1448 00aa 2369     		ldr	r3, [r4, #16]
 1449 00ac 002B     		cmp	r3, #0
 1450 00ae E3D1     		bne	.L98
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1451              		.loc 1 756 0
 1452 00b0 2368     		ldr	r3, [r4]
 1453 00b2 5B68     		ldr	r3, [r3, #4]
 1454              	.LVL122:
 1455 00b4 2B70     		strb	r3, [r5]
 1456 00b6 0135     		adds	r5, r5, #1
 1457              	.LVL123:
 1458 00b8 E4E7     		b	.L94
 1459              	.L107:
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1460              		.loc 1 767 0
 1461 00ba 2023     		movs	r3, #32
 1462 00bc 84F83A30 		strb	r3, [r4, #58]
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1463              		.loc 1 770 0
 1464 00c0 0020     		movs	r0, #0
 1465 00c2 84F83800 		strb	r0, [r4, #56]
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1466              		.loc 1 772 0
 1467 00c6 00E0     		b	.L93
 1468              	.LVL124:
 1469              	.L100:
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1470              		.loc 1 776 0
 1471 00c8 0220     		movs	r0, #2
 1472              	.LVL125:
 1473              	.L93:
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1474              		.loc 1 778 0
 1475 00ca 02B0     		add	sp, sp, #8
 1476              	.LCFI18:
 1477              		.cfi_remember_state
 1478              		.cfi_def_cfa_offset 24
 1479              		@ sp needed
 1480 00cc BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1481              	.LVL126:
 1482              	.L101:
 1483              	.LCFI19:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 74


 1484              		.cfi_restore_state
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1485              		.loc 1 710 0
 1486 00d0 0120     		movs	r0, #1
 1487              	.LVL127:
 1488 00d2 FAE7     		b	.L93
 1489              	.LVL128:
 1490              	.L102:
 1491 00d4 0120     		movs	r0, #1
 1492              	.LVL129:
 1493 00d6 F8E7     		b	.L93
 1494              	.LVL130:
 1495              	.L103:
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1496              		.loc 1 714 0
 1497 00d8 0220     		movs	r0, #2
 1498              	.LVL131:
 1499 00da F6E7     		b	.L93
 1500              	.LVL132:
 1501              	.L104:
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1502              		.loc 1 733 0
 1503 00dc 0320     		movs	r0, #3
 1504 00de F4E7     		b	.L93
 1505              	.L105:
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1506              		.loc 1 752 0
 1507 00e0 0320     		movs	r0, #3
 1508 00e2 F2E7     		b	.L93
 1509              		.cfi_endproc
 1510              	.LFE134:
 1512              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1513              		.align	1
 1514              		.global	HAL_UART_Transmit_IT
 1515              		.syntax unified
 1516              		.thumb
 1517              		.thumb_func
 1518              		.fpu fpv4-sp-d16
 1520              	HAL_UART_Transmit_IT:
 1521              	.LFB135:
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 1522              		.loc 1 789 0
 1523              		.cfi_startproc
 1524              		@ args = 0, pretend = 0, frame = 0
 1525              		@ frame_needed = 0, uses_anonymous_args = 0
 1526              		@ link register save eliminated.
 1527              	.LVL133:
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1528              		.loc 1 791 0
 1529 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1530 0004 DBB2     		uxtb	r3, r3
 1531 0006 202B     		cmp	r3, #32
 1532 0008 16D1     		bne	.L111
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1533              		.loc 1 793 0
 1534 000a B9B1     		cbz	r1, .L112
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 75


 1535              		.loc 1 793 0 is_stmt 0 discriminator 1
 1536 000c C2B1     		cbz	r2, .L113
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1537              		.loc 1 799 0 is_stmt 1
 1538 000e 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1539 0012 012B     		cmp	r3, #1
 1540 0014 16D0     		beq	.L114
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1541              		.loc 1 801 0 discriminator 2
 1542 0016 0162     		str	r1, [r0, #32]
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1543              		.loc 1 802 0 discriminator 2
 1544 0018 8284     		strh	r2, [r0, #36]	@ movhi
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1545              		.loc 1 803 0 discriminator 2
 1546 001a C284     		strh	r2, [r0, #38]	@ movhi
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1547              		.loc 1 805 0 discriminator 2
 1548 001c 0023     		movs	r3, #0
 1549 001e C363     		str	r3, [r0, #60]
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1550              		.loc 1 806 0 discriminator 2
 1551 0020 2122     		movs	r2, #33
 1552              	.LVL134:
 1553 0022 80F83920 		strb	r2, [r0, #57]
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1554              		.loc 1 809 0 discriminator 2
 1555 0026 80F83830 		strb	r3, [r0, #56]
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1556              		.loc 1 812 0 discriminator 2
 1557 002a 0168     		ldr	r1, [r0]
 1558              	.LVL135:
 1559 002c CA68     		ldr	r2, [r1, #12]
 1560 002e 42F08002 		orr	r2, r2, #128
 1561 0032 CA60     		str	r2, [r1, #12]
 1562              	.LVL136:
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1563              		.loc 1 814 0 discriminator 2
 1564 0034 1846     		mov	r0, r3
 1565              	.LVL137:
 1566 0036 7047     		bx	lr
 1567              	.LVL138:
 1568              	.L111:
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1569              		.loc 1 818 0
 1570 0038 0220     		movs	r0, #2
 1571              	.LVL139:
 1572 003a 7047     		bx	lr
 1573              	.LVL140:
 1574              	.L112:
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1575              		.loc 1 795 0
 1576 003c 0120     		movs	r0, #1
 1577              	.LVL141:
 1578 003e 7047     		bx	lr
 1579              	.LVL142:
 1580              	.L113:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 76


 1581 0040 0120     		movs	r0, #1
 1582              	.LVL143:
 1583 0042 7047     		bx	lr
 1584              	.LVL144:
 1585              	.L114:
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1586              		.loc 1 799 0
 1587 0044 0220     		movs	r0, #2
 1588              	.LVL145:
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1589              		.loc 1 820 0
 1590 0046 7047     		bx	lr
 1591              		.cfi_endproc
 1592              	.LFE135:
 1594              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1595              		.align	1
 1596              		.global	HAL_UART_Receive_IT
 1597              		.syntax unified
 1598              		.thumb
 1599              		.thumb_func
 1600              		.fpu fpv4-sp-d16
 1602              	HAL_UART_Receive_IT:
 1603              	.LFB136:
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */ 
 1604              		.loc 1 831 0
 1605              		.cfi_startproc
 1606              		@ args = 0, pretend = 0, frame = 0
 1607              		@ frame_needed = 0, uses_anonymous_args = 0
 1608              		@ link register save eliminated.
 1609              	.LVL146:
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1610              		.loc 1 833 0
 1611 0000 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1612 0004 DBB2     		uxtb	r3, r3
 1613 0006 202B     		cmp	r3, #32
 1614 0008 1BD1     		bne	.L117
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1615              		.loc 1 835 0
 1616 000a E1B1     		cbz	r1, .L118
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1617              		.loc 1 835 0 is_stmt 0 discriminator 1
 1618 000c EAB1     		cbz	r2, .L119
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1619              		.loc 1 841 0 is_stmt 1
 1620 000e 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1621 0012 012B     		cmp	r3, #1
 1622 0014 1BD0     		beq	.L120
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1623              		.loc 1 843 0 discriminator 2
 1624 0016 8162     		str	r1, [r0, #40]
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1625              		.loc 1 844 0 discriminator 2
 1626 0018 8285     		strh	r2, [r0, #44]	@ movhi
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1627              		.loc 1 845 0 discriminator 2
 1628 001a C285     		strh	r2, [r0, #46]	@ movhi
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 77


 1629              		.loc 1 847 0 discriminator 2
 1630 001c 0023     		movs	r3, #0
 1631 001e C363     		str	r3, [r0, #60]
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1632              		.loc 1 848 0 discriminator 2
 1633 0020 2222     		movs	r2, #34
 1634              	.LVL147:
 1635 0022 80F83A20 		strb	r2, [r0, #58]
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 1636              		.loc 1 851 0 discriminator 2
 1637 0026 80F83830 		strb	r3, [r0, #56]
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1638              		.loc 1 854 0 discriminator 2
 1639 002a 0168     		ldr	r1, [r0]
 1640              	.LVL148:
 1641 002c 4A69     		ldr	r2, [r1, #20]
 1642 002e 42F00102 		orr	r2, r2, #1
 1643 0032 4A61     		str	r2, [r1, #20]
 1644              	.LVL149:
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1645              		.loc 1 857 0 discriminator 2
 1646 0034 0168     		ldr	r1, [r0]
 1647 0036 CA68     		ldr	r2, [r1, #12]
 1648 0038 42F49072 		orr	r2, r2, #288
 1649 003c CA60     		str	r2, [r1, #12]
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1650              		.loc 1 859 0 discriminator 2
 1651 003e 1846     		mov	r0, r3
 1652              	.LVL150:
 1653 0040 7047     		bx	lr
 1654              	.LVL151:
 1655              	.L117:
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1656              		.loc 1 863 0
 1657 0042 0220     		movs	r0, #2
 1658              	.LVL152:
 1659 0044 7047     		bx	lr
 1660              	.LVL153:
 1661              	.L118:
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1662              		.loc 1 837 0
 1663 0046 0120     		movs	r0, #1
 1664              	.LVL154:
 1665 0048 7047     		bx	lr
 1666              	.LVL155:
 1667              	.L119:
 1668 004a 0120     		movs	r0, #1
 1669              	.LVL156:
 1670 004c 7047     		bx	lr
 1671              	.LVL157:
 1672              	.L120:
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1673              		.loc 1 841 0
 1674 004e 0220     		movs	r0, #2
 1675              	.LVL158:
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1676              		.loc 1 865 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 78


 1677 0050 7047     		bx	lr
 1678              		.cfi_endproc
 1679              	.LFE136:
 1681              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1682              		.align	1
 1683              		.global	HAL_UART_Transmit_DMA
 1684              		.syntax unified
 1685              		.thumb
 1686              		.thumb_func
 1687              		.fpu fpv4-sp-d16
 1689              	HAL_UART_Transmit_DMA:
 1690              	.LFB137:
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
 1691              		.loc 1 876 0
 1692              		.cfi_startproc
 1693              		@ args = 0, pretend = 0, frame = 0
 1694              		@ frame_needed = 0, uses_anonymous_args = 0
 1695              	.LVL159:
 1696 0000 38B5     		push	{r3, r4, r5, lr}
 1697              	.LCFI20:
 1698              		.cfi_def_cfa_offset 16
 1699              		.cfi_offset 3, -16
 1700              		.cfi_offset 4, -12
 1701              		.cfi_offset 5, -8
 1702              		.cfi_offset 14, -4
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1703              		.loc 1 880 0
 1704 0002 90F83940 		ldrb	r4, [r0, #57]	@ zero_extendqisi2
 1705 0006 E4B2     		uxtb	r4, r4
 1706 0008 202C     		cmp	r4, #32
 1707 000a 31D1     		bne	.L123
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1708              		.loc 1 882 0
 1709 000c 0029     		cmp	r1, #0
 1710 000e 31D0     		beq	.L124
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1711              		.loc 1 882 0 is_stmt 0 discriminator 1
 1712 0010 002A     		cmp	r2, #0
 1713 0012 31D0     		beq	.L125
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1714              		.loc 1 888 0 is_stmt 1
 1715 0014 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1716 0018 012B     		cmp	r3, #1
 1717 001a 2FD0     		beq	.L126
 1718 001c 1346     		mov	r3, r2
 1719 001e 0446     		mov	r4, r0
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1720              		.loc 1 888 0 is_stmt 0 discriminator 2
 1721 0020 0122     		movs	r2, #1
 1722              	.LVL160:
 1723 0022 80F83820 		strb	r2, [r0, #56]
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1724              		.loc 1 890 0 is_stmt 1 discriminator 2
 1725 0026 0162     		str	r1, [r0, #32]
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1726              		.loc 1 891 0 discriminator 2
 1727 0028 8384     		strh	r3, [r0, #36]	@ movhi
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 79


 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1728              		.loc 1 892 0 discriminator 2
 1729 002a C384     		strh	r3, [r0, #38]	@ movhi
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1730              		.loc 1 894 0 discriminator 2
 1731 002c 0025     		movs	r5, #0
 1732 002e C563     		str	r5, [r0, #60]
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1733              		.loc 1 895 0 discriminator 2
 1734 0030 2122     		movs	r2, #33
 1735 0032 80F83920 		strb	r2, [r0, #57]
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1736              		.loc 1 898 0 discriminator 2
 1737 0036 026B     		ldr	r2, [r0, #48]
 1738 0038 1148     		ldr	r0, .L128
 1739              	.LVL161:
 1740 003a D063     		str	r0, [r2, #60]
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1741              		.loc 1 901 0 discriminator 2
 1742 003c 226B     		ldr	r2, [r4, #48]
 1743 003e 1148     		ldr	r0, .L128+4
 1744 0040 1064     		str	r0, [r2, #64]
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1745              		.loc 1 904 0 discriminator 2
 1746 0042 226B     		ldr	r2, [r4, #48]
 1747 0044 1048     		ldr	r0, .L128+8
 1748 0046 D064     		str	r0, [r2, #76]
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1749              		.loc 1 907 0 discriminator 2
 1750 0048 226B     		ldr	r2, [r4, #48]
 1751 004a 1565     		str	r5, [r2, #80]
 1752              	.LVL162:
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1753              		.loc 1 911 0 discriminator 2
 1754 004c 2268     		ldr	r2, [r4]
 1755 004e 0432     		adds	r2, r2, #4
 1756 0050 206B     		ldr	r0, [r4, #48]
 1757 0052 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1758              	.LVL163:
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1759              		.loc 1 914 0 discriminator 2
 1760 0056 2368     		ldr	r3, [r4]
 1761 0058 6FF04002 		mvn	r2, #64
 1762 005c 1A60     		str	r2, [r3]
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1763              		.loc 1 917 0 discriminator 2
 1764 005e 84F83850 		strb	r5, [r4, #56]
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1765              		.loc 1 921 0 discriminator 2
 1766 0062 2268     		ldr	r2, [r4]
 1767 0064 5369     		ldr	r3, [r2, #20]
 1768 0066 43F08003 		orr	r3, r3, #128
 1769 006a 5361     		str	r3, [r2, #20]
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1770              		.loc 1 923 0 discriminator 2
 1771 006c 2846     		mov	r0, r5
 1772 006e 00E0     		b	.L122
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 80


 1773              	.LVL164:
 1774              	.L123:
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1775              		.loc 1 927 0
 1776 0070 0220     		movs	r0, #2
 1777              	.LVL165:
 1778              	.L122:
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1779              		.loc 1 929 0
 1780 0072 38BD     		pop	{r3, r4, r5, pc}
 1781              	.LVL166:
 1782              	.L124:
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1783              		.loc 1 884 0
 1784 0074 0120     		movs	r0, #1
 1785              	.LVL167:
 1786 0076 FCE7     		b	.L122
 1787              	.LVL168:
 1788              	.L125:
 1789 0078 0120     		movs	r0, #1
 1790              	.LVL169:
 1791 007a FAE7     		b	.L122
 1792              	.LVL170:
 1793              	.L126:
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1794              		.loc 1 888 0
 1795 007c 0220     		movs	r0, #2
 1796              	.LVL171:
 1797 007e F8E7     		b	.L122
 1798              	.L129:
 1799              		.align	2
 1800              	.L128:
 1801 0080 00000000 		.word	UART_DMATransmitCplt
 1802 0084 00000000 		.word	UART_DMATxHalfCplt
 1803 0088 00000000 		.word	UART_DMAError
 1804              		.cfi_endproc
 1805              	.LFE137:
 1807              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1808              		.align	1
 1809              		.global	HAL_UART_Receive_DMA
 1810              		.syntax unified
 1811              		.thumb
 1812              		.thumb_func
 1813              		.fpu fpv4-sp-d16
 1815              	HAL_UART_Receive_DMA:
 1816              	.LFB138:
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
 1817              		.loc 1 941 0
 1818              		.cfi_startproc
 1819              		@ args = 0, pretend = 0, frame = 8
 1820              		@ frame_needed = 0, uses_anonymous_args = 0
 1821              	.LVL172:
 1822 0000 30B5     		push	{r4, r5, lr}
 1823              	.LCFI21:
 1824              		.cfi_def_cfa_offset 12
 1825              		.cfi_offset 4, -12
 1826              		.cfi_offset 5, -8
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 81


 1827              		.cfi_offset 14, -4
 1828 0002 83B0     		sub	sp, sp, #12
 1829              	.LCFI22:
 1830              		.cfi_def_cfa_offset 24
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1831              		.loc 1 945 0
 1832 0004 90F83A40 		ldrb	r4, [r0, #58]	@ zero_extendqisi2
 1833 0008 E4B2     		uxtb	r4, r4
 1834 000a 202C     		cmp	r4, #32
 1835 000c 3DD1     		bne	.L132
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1836              		.loc 1 947 0
 1837 000e 0029     		cmp	r1, #0
 1838 0010 3ED0     		beq	.L133
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1839              		.loc 1 947 0 is_stmt 0 discriminator 1
 1840 0012 002A     		cmp	r2, #0
 1841 0014 3ED0     		beq	.L134
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1842              		.loc 1 953 0 is_stmt 1
 1843 0016 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1844 001a 012B     		cmp	r3, #1
 1845 001c 3CD0     		beq	.L135
 1846 001e 1346     		mov	r3, r2
 1847 0020 0A46     		mov	r2, r1
 1848              	.LVL173:
 1849 0022 0446     		mov	r4, r0
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1850              		.loc 1 953 0 is_stmt 0 discriminator 2
 1851 0024 0121     		movs	r1, #1
 1852              	.LVL174:
 1853 0026 80F83810 		strb	r1, [r0, #56]
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1854              		.loc 1 955 0 is_stmt 1 discriminator 2
 1855 002a 8262     		str	r2, [r0, #40]
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1856              		.loc 1 956 0 discriminator 2
 1857 002c 8385     		strh	r3, [r0, #44]	@ movhi
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1858              		.loc 1 958 0 discriminator 2
 1859 002e 0025     		movs	r5, #0
 1860 0030 C563     		str	r5, [r0, #60]
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 1861              		.loc 1 959 0 discriminator 2
 1862 0032 2221     		movs	r1, #34
 1863 0034 80F83A10 		strb	r1, [r0, #58]
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1864              		.loc 1 962 0 discriminator 2
 1865 0038 416B     		ldr	r1, [r0, #52]
 1866 003a 1848     		ldr	r0, .L137
 1867              	.LVL175:
 1868 003c C863     		str	r0, [r1, #60]
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1869              		.loc 1 965 0 discriminator 2
 1870 003e 616B     		ldr	r1, [r4, #52]
 1871 0040 1748     		ldr	r0, .L137+4
 1872 0042 0864     		str	r0, [r1, #64]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 82


 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1873              		.loc 1 968 0 discriminator 2
 1874 0044 616B     		ldr	r1, [r4, #52]
 1875 0046 1748     		ldr	r0, .L137+8
 1876 0048 C864     		str	r0, [r1, #76]
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1877              		.loc 1 971 0 discriminator 2
 1878 004a 616B     		ldr	r1, [r4, #52]
 1879 004c 0D65     		str	r5, [r1, #80]
 1880              	.LVL176:
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1881              		.loc 1 975 0 discriminator 2
 1882 004e 2168     		ldr	r1, [r4]
 1883 0050 0431     		adds	r1, r1, #4
 1884 0052 606B     		ldr	r0, [r4, #52]
 1885 0054 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1886              	.LVL177:
 1887              	.LBB2:
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1888              		.loc 1 978 0 discriminator 2
 1889 0058 0195     		str	r5, [sp, #4]
 1890 005a 2368     		ldr	r3, [r4]
 1891 005c 1A68     		ldr	r2, [r3]
 1892 005e 0192     		str	r2, [sp, #4]
 1893 0060 5A68     		ldr	r2, [r3, #4]
 1894 0062 0192     		str	r2, [sp, #4]
 1895 0064 019A     		ldr	r2, [sp, #4]
 1896              	.LBE2:
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1897              		.loc 1 981 0 discriminator 2
 1898 0066 84F83850 		strb	r5, [r4, #56]
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1899              		.loc 1 984 0 discriminator 2
 1900 006a DA68     		ldr	r2, [r3, #12]
 1901 006c 42F48072 		orr	r2, r2, #256
 1902 0070 DA60     		str	r2, [r3, #12]
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1903              		.loc 1 987 0 discriminator 2
 1904 0072 2268     		ldr	r2, [r4]
 1905 0074 5369     		ldr	r3, [r2, #20]
 1906 0076 43F00103 		orr	r3, r3, #1
 1907 007a 5361     		str	r3, [r2, #20]
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1908              		.loc 1 991 0 discriminator 2
 1909 007c 2268     		ldr	r2, [r4]
 1910 007e 5369     		ldr	r3, [r2, #20]
 1911 0080 43F04003 		orr	r3, r3, #64
 1912 0084 5361     		str	r3, [r2, #20]
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1913              		.loc 1 993 0 discriminator 2
 1914 0086 2846     		mov	r0, r5
 1915 0088 00E0     		b	.L131
 1916              	.LVL178:
 1917              	.L132:
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1918              		.loc 1 997 0
 1919 008a 0220     		movs	r0, #2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 83


 1920              	.LVL179:
 1921              	.L131:
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1922              		.loc 1 999 0
 1923 008c 03B0     		add	sp, sp, #12
 1924              	.LCFI23:
 1925              		.cfi_remember_state
 1926              		.cfi_def_cfa_offset 12
 1927              		@ sp needed
 1928 008e 30BD     		pop	{r4, r5, pc}
 1929              	.LVL180:
 1930              	.L133:
 1931              	.LCFI24:
 1932              		.cfi_restore_state
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1933              		.loc 1 949 0
 1934 0090 0120     		movs	r0, #1
 1935              	.LVL181:
 1936 0092 FBE7     		b	.L131
 1937              	.LVL182:
 1938              	.L134:
 1939 0094 0120     		movs	r0, #1
 1940              	.LVL183:
 1941 0096 F9E7     		b	.L131
 1942              	.LVL184:
 1943              	.L135:
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1944              		.loc 1 953 0
 1945 0098 0220     		movs	r0, #2
 1946              	.LVL185:
 1947 009a F7E7     		b	.L131
 1948              	.L138:
 1949              		.align	2
 1950              	.L137:
 1951 009c 00000000 		.word	UART_DMAReceiveCplt
 1952 00a0 00000000 		.word	UART_DMARxHalfCplt
 1953 00a4 00000000 		.word	UART_DMAError
 1954              		.cfi_endproc
 1955              	.LFE138:
 1957              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1958              		.align	1
 1959              		.global	HAL_UART_DMAPause
 1960              		.syntax unified
 1961              		.thumb
 1962              		.thumb_func
 1963              		.fpu fpv4-sp-d16
 1965              	HAL_UART_DMAPause:
 1966              	.LFB139:
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t dmarequest = 0x00U;
 1967              		.loc 1 1008 0
 1968              		.cfi_startproc
 1969              		@ args = 0, pretend = 0, frame = 0
 1970              		@ frame_needed = 0, uses_anonymous_args = 0
 1971              		@ link register save eliminated.
 1972              	.LVL186:
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 1973              		.loc 1 1012 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 84


 1974 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1975 0004 012B     		cmp	r3, #1
 1976 0006 31D0     		beq	.L143
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 1977              		.loc 1 1012 0 is_stmt 0 discriminator 2
 1978 0008 0123     		movs	r3, #1
 1979 000a 80F83830 		strb	r3, [r0, #56]
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1980              		.loc 1 1013 0 is_stmt 1 discriminator 2
 1981 000e 0168     		ldr	r1, [r0]
 1982 0010 4A69     		ldr	r2, [r1, #20]
 1983 0012 02F08002 		and	r2, r2, #128
 1984              	.LVL187:
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1985              		.loc 1 1014 0 discriminator 2
 1986 0016 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1987 001a DBB2     		uxtb	r3, r3
 1988 001c 212B     		cmp	r3, #33
 1989 001e 0DD0     		beq	.L144
 1990              	.L141:
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 1991              		.loc 1 1019 0
 1992 0020 0168     		ldr	r1, [r0]
 1993 0022 4A69     		ldr	r2, [r1, #20]
 1994              	.LVL188:
 1995 0024 02F04002 		and	r2, r2, #64
 1996              	.LVL189:
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1997              		.loc 1 1020 0
 1998 0028 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1999 002c DBB2     		uxtb	r3, r3
 2000 002e 222B     		cmp	r3, #34
 2001 0030 0BD0     		beq	.L145
 2002              	.LVL190:
 2003              	.L142:
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 2004              		.loc 1 1031 0
 2005 0032 0023     		movs	r3, #0
 2006 0034 80F83830 		strb	r3, [r0, #56]
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2007              		.loc 1 1033 0
 2008 0038 1846     		mov	r0, r3
 2009              	.LVL191:
 2010 003a 7047     		bx	lr
 2011              	.LVL192:
 2012              	.L144:
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2013              		.loc 1 1014 0 discriminator 1
 2014 003c 002A     		cmp	r2, #0
 2015 003e EFD0     		beq	.L141
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2016              		.loc 1 1017 0
 2017 0040 4B69     		ldr	r3, [r1, #20]
 2018 0042 23F08003 		bic	r3, r3, #128
 2019 0046 4B61     		str	r3, [r1, #20]
 2020 0048 EAE7     		b	.L141
 2021              	.L145:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 85


1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2022              		.loc 1 1020 0 discriminator 1
 2023 004a 002A     		cmp	r2, #0
 2024 004c F1D0     		beq	.L142
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2025              		.loc 1 1023 0
 2026 004e CB68     		ldr	r3, [r1, #12]
 2027 0050 23F48073 		bic	r3, r3, #256
 2028 0054 CB60     		str	r3, [r1, #12]
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2029              		.loc 1 1024 0
 2030 0056 0268     		ldr	r2, [r0]
 2031              	.LVL193:
 2032 0058 5369     		ldr	r3, [r2, #20]
 2033 005a 23F00103 		bic	r3, r3, #1
 2034 005e 5361     		str	r3, [r2, #20]
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2035              		.loc 1 1027 0
 2036 0060 0268     		ldr	r2, [r0]
 2037 0062 5369     		ldr	r3, [r2, #20]
 2038 0064 23F04003 		bic	r3, r3, #64
 2039 0068 5361     		str	r3, [r2, #20]
 2040 006a E2E7     		b	.L142
 2041              	.LVL194:
 2042              	.L143:
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 2043              		.loc 1 1012 0
 2044 006c 0220     		movs	r0, #2
 2045              	.LVL195:
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2046              		.loc 1 1034 0
 2047 006e 7047     		bx	lr
 2048              		.cfi_endproc
 2049              	.LFE139:
 2051              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 2052              		.align	1
 2053              		.global	HAL_UART_DMAResume
 2054              		.syntax unified
 2055              		.thumb
 2056              		.thumb_func
 2057              		.fpu fpv4-sp-d16
 2059              	HAL_UART_DMAResume:
 2060              	.LFB140:
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
 2061              		.loc 1 1043 0
 2062              		.cfi_startproc
 2063              		@ args = 0, pretend = 0, frame = 8
 2064              		@ frame_needed = 0, uses_anonymous_args = 0
 2065              		@ link register save eliminated.
 2066              	.LVL196:
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 2067              		.loc 1 1045 0
 2068 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 2069 0004 012B     		cmp	r3, #1
 2070 0006 34D0     		beq	.L150
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 2071              		.loc 1 1045 0 is_stmt 0 discriminator 2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 86


 2072 0008 0123     		movs	r3, #1
 2073 000a 80F83830 		strb	r3, [r0, #56]
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2074              		.loc 1 1047 0 is_stmt 1 discriminator 2
 2075 000e 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 2076 0012 DBB2     		uxtb	r3, r3
 2077 0014 212B     		cmp	r3, #33
 2078 0016 09D0     		beq	.L156
 2079              	.L148:
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2080              		.loc 1 1052 0
 2081 0018 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 2082 001c DBB2     		uxtb	r3, r3
 2083 001e 222B     		cmp	r3, #34
 2084 0020 0AD0     		beq	.L157
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 2085              		.loc 1 1066 0
 2086 0022 0023     		movs	r3, #0
 2087 0024 80F83830 		strb	r3, [r0, #56]
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2088              		.loc 1 1068 0
 2089 0028 1846     		mov	r0, r3
 2090              	.LVL197:
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2091              		.loc 1 1069 0
 2092 002a 7047     		bx	lr
 2093              	.LVL198:
 2094              	.L156:
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2095              		.loc 1 1050 0
 2096 002c 0268     		ldr	r2, [r0]
 2097 002e 5369     		ldr	r3, [r2, #20]
 2098 0030 43F08003 		orr	r3, r3, #128
 2099 0034 5361     		str	r3, [r2, #20]
 2100 0036 EFE7     		b	.L148
 2101              	.L157:
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
 2102              		.loc 1 1043 0
 2103 0038 82B0     		sub	sp, sp, #8
 2104              	.LCFI25:
 2105              		.cfi_def_cfa_offset 8
 2106              	.LBB3:
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2107              		.loc 1 1055 0
 2108 003a 0023     		movs	r3, #0
 2109 003c 0193     		str	r3, [sp, #4]
 2110 003e 0368     		ldr	r3, [r0]
 2111 0040 1A68     		ldr	r2, [r3]
 2112 0042 0192     		str	r2, [sp, #4]
 2113 0044 5A68     		ldr	r2, [r3, #4]
 2114 0046 0192     		str	r2, [sp, #4]
 2115 0048 019A     		ldr	r2, [sp, #4]
 2116              	.LBE3:
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2117              		.loc 1 1058 0
 2118 004a DA68     		ldr	r2, [r3, #12]
 2119 004c 42F48072 		orr	r2, r2, #256
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 87


 2120 0050 DA60     		str	r2, [r3, #12]
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2121              		.loc 1 1059 0
 2122 0052 0268     		ldr	r2, [r0]
 2123 0054 5369     		ldr	r3, [r2, #20]
 2124 0056 43F00103 		orr	r3, r3, #1
 2125 005a 5361     		str	r3, [r2, #20]
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2126              		.loc 1 1062 0
 2127 005c 0268     		ldr	r2, [r0]
 2128 005e 5369     		ldr	r3, [r2, #20]
 2129 0060 43F04003 		orr	r3, r3, #64
 2130 0064 5361     		str	r3, [r2, #20]
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 2131              		.loc 1 1066 0
 2132 0066 0023     		movs	r3, #0
 2133 0068 80F83830 		strb	r3, [r0, #56]
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2134              		.loc 1 1068 0
 2135 006c 1846     		mov	r0, r3
 2136              	.LVL199:
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2137              		.loc 1 1069 0
 2138 006e 02B0     		add	sp, sp, #8
 2139              	.LCFI26:
 2140              		.cfi_def_cfa_offset 0
 2141              		@ sp needed
 2142 0070 7047     		bx	lr
 2143              	.LVL200:
 2144              	.L150:
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 2145              		.loc 1 1045 0
 2146 0072 0220     		movs	r0, #2
 2147              	.LVL201:
 2148 0074 7047     		bx	lr
 2149              		.cfi_endproc
 2150              	.LFE140:
 2152              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2153              		.align	1
 2154              		.global	HAL_UART_DMAStop
 2155              		.syntax unified
 2156              		.thumb
 2157              		.thumb_func
 2158              		.fpu fpv4-sp-d16
 2160              	HAL_UART_DMAStop:
 2161              	.LFB141:
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2162              		.loc 1 1078 0
 2163              		.cfi_startproc
 2164              		@ args = 0, pretend = 0, frame = 0
 2165              		@ frame_needed = 0, uses_anonymous_args = 0
 2166              	.LVL202:
 2167 0000 10B5     		push	{r4, lr}
 2168              	.LCFI27:
 2169              		.cfi_def_cfa_offset 8
 2170              		.cfi_offset 4, -8
 2171              		.cfi_offset 14, -4
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 88


 2172 0002 0446     		mov	r4, r0
 2173              	.LVL203:
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2174              		.loc 1 1087 0
 2175 0004 0168     		ldr	r1, [r0]
 2176 0006 4A69     		ldr	r2, [r1, #20]
 2177              	.LVL204:
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2178              		.loc 1 1088 0
 2179 0008 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 2180 000c DBB2     		uxtb	r3, r3
 2181 000e 212B     		cmp	r3, #33
 2182 0010 0AD0     		beq	.L164
 2183              	.LVL205:
 2184              	.L159:
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2185              		.loc 1 1101 0
 2186 0012 2168     		ldr	r1, [r4]
 2187 0014 4A69     		ldr	r2, [r1, #20]
 2188 0016 02F04002 		and	r2, r2, #64
 2189              	.LVL206:
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2190              		.loc 1 1102 0
 2191 001a 94F83A30 		ldrb	r3, [r4, #58]	@ zero_extendqisi2
 2192 001e DBB2     		uxtb	r3, r3
 2193 0020 222B     		cmp	r3, #34
 2194 0022 11D0     		beq	.L165
 2195              	.LVL207:
 2196              	.L161:
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2197              		.loc 1 1115 0
 2198 0024 0020     		movs	r0, #0
 2199 0026 10BD     		pop	{r4, pc}
 2200              	.LVL208:
 2201              	.L164:
 2202 0028 02F08002 		and	r2, r2, #128
 2203              	.LVL209:
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2204              		.loc 1 1088 0 discriminator 1
 2205 002c 002A     		cmp	r2, #0
 2206 002e F0D0     		beq	.L159
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2207              		.loc 1 1090 0
 2208 0030 4B69     		ldr	r3, [r1, #20]
 2209 0032 23F08003 		bic	r3, r3, #128
 2210 0036 4B61     		str	r3, [r1, #20]
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2211              		.loc 1 1093 0
 2212 0038 006B     		ldr	r0, [r0, #48]
 2213              	.LVL210:
 2214 003a 08B1     		cbz	r0, .L160
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2215              		.loc 1 1095 0
 2216 003c FFF7FEFF 		bl	HAL_DMA_Abort
 2217              	.LVL211:
 2218              	.L160:
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 89


 2219              		.loc 1 1097 0
 2220 0040 2046     		mov	r0, r4
 2221 0042 FFF7FEFF 		bl	UART_EndTxTransfer
 2222              	.LVL212:
 2223 0046 E4E7     		b	.L159
 2224              	.LVL213:
 2225              	.L165:
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2226              		.loc 1 1102 0 discriminator 1
 2227 0048 002A     		cmp	r2, #0
 2228 004a EBD0     		beq	.L161
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2229              		.loc 1 1104 0
 2230 004c 4B69     		ldr	r3, [r1, #20]
 2231 004e 23F04003 		bic	r3, r3, #64
 2232 0052 4B61     		str	r3, [r1, #20]
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2233              		.loc 1 1107 0
 2234 0054 606B     		ldr	r0, [r4, #52]
 2235 0056 08B1     		cbz	r0, .L162
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2236              		.loc 1 1109 0
 2237 0058 FFF7FEFF 		bl	HAL_DMA_Abort
 2238              	.LVL214:
 2239              	.L162:
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2240              		.loc 1 1111 0
 2241 005c 2046     		mov	r0, r4
 2242 005e FFF7FEFF 		bl	UART_EndRxTransfer
 2243              	.LVL215:
 2244 0062 DFE7     		b	.L161
 2245              		.cfi_endproc
 2246              	.LFE141:
 2248              		.section	.text.HAL_UART_Abort,"ax",%progbits
 2249              		.align	1
 2250              		.global	HAL_UART_Abort
 2251              		.syntax unified
 2252              		.thumb
 2253              		.thumb_func
 2254              		.fpu fpv4-sp-d16
 2256              	HAL_UART_Abort:
 2257              	.LFB142:
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2258              		.loc 1 1130 0
 2259              		.cfi_startproc
 2260              		@ args = 0, pretend = 0, frame = 0
 2261              		@ frame_needed = 0, uses_anonymous_args = 0
 2262              	.LVL216:
 2263 0000 10B5     		push	{r4, lr}
 2264              	.LCFI28:
 2265              		.cfi_def_cfa_offset 8
 2266              		.cfi_offset 4, -8
 2267              		.cfi_offset 14, -4
 2268 0002 0446     		mov	r4, r0
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2269              		.loc 1 1132 0
 2270 0004 0268     		ldr	r2, [r0]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 90


 2271 0006 D368     		ldr	r3, [r2, #12]
 2272 0008 23F4F073 		bic	r3, r3, #480
 2273 000c D360     		str	r3, [r2, #12]
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 2274              		.loc 1 1133 0
 2275 000e 0268     		ldr	r2, [r0]
 2276 0010 5369     		ldr	r3, [r2, #20]
 2277 0012 23F00103 		bic	r3, r3, #1
 2278 0016 5361     		str	r3, [r2, #20]
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2279              		.loc 1 1136 0
 2280 0018 0368     		ldr	r3, [r0]
 2281 001a 5A69     		ldr	r2, [r3, #20]
 2282 001c 12F0800F 		tst	r2, #128
 2283 0020 0AD0     		beq	.L167
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2284              		.loc 1 1138 0
 2285 0022 5A69     		ldr	r2, [r3, #20]
 2286 0024 22F08002 		bic	r2, r2, #128
 2287 0028 5A61     		str	r2, [r3, #20]
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2288              		.loc 1 1141 0
 2289 002a 036B     		ldr	r3, [r0, #48]
 2290 002c 23B1     		cbz	r3, .L167
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2291              		.loc 1 1145 0
 2292 002e 0022     		movs	r2, #0
 2293 0030 1A65     		str	r2, [r3, #80]
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2294              		.loc 1 1147 0
 2295 0032 006B     		ldr	r0, [r0, #48]
 2296              	.LVL217:
 2297 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 2298              	.LVL218:
 2299              	.L167:
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2300              		.loc 1 1152 0
 2301 0038 2368     		ldr	r3, [r4]
 2302 003a 5A69     		ldr	r2, [r3, #20]
 2303 003c 12F0400F 		tst	r2, #64
 2304 0040 0AD0     		beq	.L168
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2305              		.loc 1 1154 0
 2306 0042 5A69     		ldr	r2, [r3, #20]
 2307 0044 22F04002 		bic	r2, r2, #64
 2308 0048 5A61     		str	r2, [r3, #20]
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2309              		.loc 1 1157 0
 2310 004a 636B     		ldr	r3, [r4, #52]
 2311 004c 23B1     		cbz	r3, .L168
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2312              		.loc 1 1161 0
 2313 004e 0022     		movs	r2, #0
 2314 0050 1A65     		str	r2, [r3, #80]
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2315              		.loc 1 1163 0
 2316 0052 606B     		ldr	r0, [r4, #52]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 91


 2317 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 2318              	.LVL219:
 2319              	.L168:
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 2320              		.loc 1 1168 0
 2321 0058 0020     		movs	r0, #0
 2322 005a E084     		strh	r0, [r4, #38]	@ movhi
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2323              		.loc 1 1169 0
 2324 005c E085     		strh	r0, [r4, #46]	@ movhi
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2325              		.loc 1 1172 0
 2326 005e E063     		str	r0, [r4, #60]
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2327              		.loc 1 1175 0
 2328 0060 2023     		movs	r3, #32
 2329 0062 84F83A30 		strb	r3, [r4, #58]
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2330              		.loc 1 1176 0
 2331 0066 84F83930 		strb	r3, [r4, #57]
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2332              		.loc 1 1179 0
 2333 006a 10BD     		pop	{r4, pc}
 2334              		.cfi_endproc
 2335              	.LFE142:
 2337              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 2338              		.align	1
 2339              		.global	HAL_UART_AbortTransmit
 2340              		.syntax unified
 2341              		.thumb
 2342              		.thumb_func
 2343              		.fpu fpv4-sp-d16
 2345              	HAL_UART_AbortTransmit:
 2346              	.LFB143:
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 2347              		.loc 1 1194 0
 2348              		.cfi_startproc
 2349              		@ args = 0, pretend = 0, frame = 0
 2350              		@ frame_needed = 0, uses_anonymous_args = 0
 2351              	.LVL220:
 2352 0000 10B5     		push	{r4, lr}
 2353              	.LCFI29:
 2354              		.cfi_def_cfa_offset 8
 2355              		.cfi_offset 4, -8
 2356              		.cfi_offset 14, -4
 2357 0002 0446     		mov	r4, r0
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2358              		.loc 1 1196 0
 2359 0004 0268     		ldr	r2, [r0]
 2360 0006 D368     		ldr	r3, [r2, #12]
 2361 0008 23F0C003 		bic	r3, r3, #192
 2362 000c D360     		str	r3, [r2, #12]
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2363              		.loc 1 1199 0
 2364 000e 0368     		ldr	r3, [r0]
 2365 0010 5A69     		ldr	r2, [r3, #20]
 2366 0012 12F0800F 		tst	r2, #128
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 92


 2367 0016 0AD0     		beq	.L171
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2368              		.loc 1 1201 0
 2369 0018 5A69     		ldr	r2, [r3, #20]
 2370 001a 22F08002 		bic	r2, r2, #128
 2371 001e 5A61     		str	r2, [r3, #20]
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2372              		.loc 1 1204 0
 2373 0020 036B     		ldr	r3, [r0, #48]
 2374 0022 23B1     		cbz	r3, .L171
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2375              		.loc 1 1208 0
 2376 0024 0022     		movs	r2, #0
 2377 0026 1A65     		str	r2, [r3, #80]
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2378              		.loc 1 1210 0
 2379 0028 006B     		ldr	r0, [r0, #48]
 2380              	.LVL221:
 2381 002a FFF7FEFF 		bl	HAL_DMA_Abort
 2382              	.LVL222:
 2383              	.L171:
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2384              		.loc 1 1215 0
 2385 002e 0020     		movs	r0, #0
 2386 0030 E084     		strh	r0, [r4, #38]	@ movhi
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2387              		.loc 1 1218 0
 2388 0032 2023     		movs	r3, #32
 2389 0034 84F83930 		strb	r3, [r4, #57]
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2390              		.loc 1 1221 0
 2391 0038 10BD     		pop	{r4, pc}
 2392              		.cfi_endproc
 2393              	.LFE143:
 2395              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 2396              		.align	1
 2397              		.global	HAL_UART_AbortReceive
 2398              		.syntax unified
 2399              		.thumb
 2400              		.thumb_func
 2401              		.fpu fpv4-sp-d16
 2403              	HAL_UART_AbortReceive:
 2404              	.LFB144:
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2405              		.loc 1 1236 0
 2406              		.cfi_startproc
 2407              		@ args = 0, pretend = 0, frame = 0
 2408              		@ frame_needed = 0, uses_anonymous_args = 0
 2409              	.LVL223:
 2410 0000 10B5     		push	{r4, lr}
 2411              	.LCFI30:
 2412              		.cfi_def_cfa_offset 8
 2413              		.cfi_offset 4, -8
 2414              		.cfi_offset 14, -4
 2415 0002 0446     		mov	r4, r0
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2416              		.loc 1 1238 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 93


 2417 0004 0268     		ldr	r2, [r0]
 2418 0006 D368     		ldr	r3, [r2, #12]
 2419 0008 23F49073 		bic	r3, r3, #288
 2420 000c D360     		str	r3, [r2, #12]
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2421              		.loc 1 1239 0
 2422 000e 0268     		ldr	r2, [r0]
 2423 0010 5369     		ldr	r3, [r2, #20]
 2424 0012 23F00103 		bic	r3, r3, #1
 2425 0016 5361     		str	r3, [r2, #20]
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2426              		.loc 1 1242 0
 2427 0018 0368     		ldr	r3, [r0]
 2428 001a 5A69     		ldr	r2, [r3, #20]
 2429 001c 12F0400F 		tst	r2, #64
 2430 0020 0AD0     		beq	.L174
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2431              		.loc 1 1244 0
 2432 0022 5A69     		ldr	r2, [r3, #20]
 2433 0024 22F04002 		bic	r2, r2, #64
 2434 0028 5A61     		str	r2, [r3, #20]
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2435              		.loc 1 1247 0
 2436 002a 436B     		ldr	r3, [r0, #52]
 2437 002c 23B1     		cbz	r3, .L174
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2438              		.loc 1 1251 0
 2439 002e 0022     		movs	r2, #0
 2440 0030 1A65     		str	r2, [r3, #80]
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2441              		.loc 1 1253 0
 2442 0032 406B     		ldr	r0, [r0, #52]
 2443              	.LVL224:
 2444 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 2445              	.LVL225:
 2446              	.L174:
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2447              		.loc 1 1258 0
 2448 0038 0020     		movs	r0, #0
 2449 003a E085     		strh	r0, [r4, #46]	@ movhi
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2450              		.loc 1 1261 0
 2451 003c 2023     		movs	r3, #32
 2452 003e 84F83A30 		strb	r3, [r4, #58]
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2453              		.loc 1 1264 0
 2454 0042 10BD     		pop	{r4, pc}
 2455              		.cfi_endproc
 2456              	.LFE144:
 2458              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 2459              		.align	1
 2460              		.weak	HAL_UART_TxCpltCallback
 2461              		.syntax unified
 2462              		.thumb
 2463              		.thumb_func
 2464              		.fpu fpv4-sp-d16
 2466              	HAL_UART_TxCpltCallback:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 94


 2467              	.LFB149:
1653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2468              		.loc 1 1653 0
 2469              		.cfi_startproc
 2470              		@ args = 0, pretend = 0, frame = 0
 2471              		@ frame_needed = 0, uses_anonymous_args = 0
 2472              		@ link register save eliminated.
 2473              	.LVL226:
1659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2474              		.loc 1 1659 0
 2475 0000 7047     		bx	lr
 2476              		.cfi_endproc
 2477              	.LFE149:
 2479              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 2480              		.align	1
 2481              		.syntax unified
 2482              		.thumb
 2483              		.thumb_func
 2484              		.fpu fpv4-sp-d16
 2486              	UART_DMATransmitCplt:
 2487              	.LFB164:
1995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2488              		.loc 1 1995 0
 2489              		.cfi_startproc
 2490              		@ args = 0, pretend = 0, frame = 0
 2491              		@ frame_needed = 0, uses_anonymous_args = 0
 2492              	.LVL227:
 2493 0000 08B5     		push	{r3, lr}
 2494              	.LCFI31:
 2495              		.cfi_def_cfa_offset 8
 2496              		.cfi_offset 3, -8
 2497              		.cfi_offset 14, -4
1996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
 2498              		.loc 1 1996 0
 2499 0002 836B     		ldr	r3, [r0, #56]
 2500              	.LVL228:
1998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2501              		.loc 1 1998 0
 2502 0004 0268     		ldr	r2, [r0]
 2503 0006 1268     		ldr	r2, [r2]
 2504 0008 12F4807F 		tst	r2, #256
 2505 000c 0CD1     		bne	.L178
2000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2506              		.loc 1 2000 0
 2507 000e 0022     		movs	r2, #0
 2508 0010 DA84     		strh	r2, [r3, #38]	@ movhi
2004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2509              		.loc 1 2004 0
 2510 0012 1968     		ldr	r1, [r3]
 2511 0014 4A69     		ldr	r2, [r1, #20]
 2512 0016 22F08002 		bic	r2, r2, #128
 2513 001a 4A61     		str	r2, [r1, #20]
2007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2514              		.loc 1 2007 0
 2515 001c 1A68     		ldr	r2, [r3]
 2516 001e D368     		ldr	r3, [r2, #12]
 2517              	.LVL229:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 95


 2518 0020 43F04003 		orr	r3, r3, #64
 2519 0024 D360     		str	r3, [r2, #12]
 2520              	.LVL230:
 2521              	.L177:
2015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2522              		.loc 1 2015 0
 2523 0026 08BD     		pop	{r3, pc}
 2524              	.LVL231:
 2525              	.L178:
2013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2526              		.loc 1 2013 0
 2527 0028 1846     		mov	r0, r3
 2528              	.LVL232:
 2529 002a FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2530              	.LVL233:
2015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2531              		.loc 1 2015 0
 2532 002e FAE7     		b	.L177
 2533              		.cfi_endproc
 2534              	.LFE164:
 2536              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 2537              		.align	1
 2538              		.syntax unified
 2539              		.thumb
 2540              		.thumb_func
 2541              		.fpu fpv4-sp-d16
 2543              	UART_EndTransmit_IT:
 2544              	.LFB178:
2354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */    
 2545              		.loc 1 2354 0
 2546              		.cfi_startproc
 2547              		@ args = 0, pretend = 0, frame = 0
 2548              		@ frame_needed = 0, uses_anonymous_args = 0
 2549              	.LVL234:
 2550 0000 08B5     		push	{r3, lr}
 2551              	.LCFI32:
 2552              		.cfi_def_cfa_offset 8
 2553              		.cfi_offset 3, -8
 2554              		.cfi_offset 14, -4
2356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 2555              		.loc 1 2356 0
 2556 0002 0168     		ldr	r1, [r0]
 2557 0004 CB68     		ldr	r3, [r1, #12]
 2558 0006 23F04003 		bic	r3, r3, #64
 2559 000a CB60     		str	r3, [r1, #12]
2359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2560              		.loc 1 2359 0
 2561 000c 2023     		movs	r3, #32
 2562 000e 80F83930 		strb	r3, [r0, #57]
2361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 2563              		.loc 1 2361 0
 2564 0012 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2565              	.LVL235:
2364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2566              		.loc 1 2364 0
 2567 0016 0020     		movs	r0, #0
 2568 0018 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 96


 2569              		.cfi_endproc
 2570              	.LFE178:
 2572              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 2573              		.align	1
 2574              		.weak	HAL_UART_TxHalfCpltCallback
 2575              		.syntax unified
 2576              		.thumb
 2577              		.thumb_func
 2578              		.fpu fpv4-sp-d16
 2580              	HAL_UART_TxHalfCpltCallback:
 2581              	.LFB150:
1668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2582              		.loc 1 1668 0
 2583              		.cfi_startproc
 2584              		@ args = 0, pretend = 0, frame = 0
 2585              		@ frame_needed = 0, uses_anonymous_args = 0
 2586              		@ link register save eliminated.
 2587              	.LVL236:
1674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2588              		.loc 1 1674 0
 2589 0000 7047     		bx	lr
 2590              		.cfi_endproc
 2591              	.LFE150:
 2593              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 2594              		.align	1
 2595              		.syntax unified
 2596              		.thumb
 2597              		.thumb_func
 2598              		.fpu fpv4-sp-d16
 2600              	UART_DMATxHalfCplt:
 2601              	.LFB165:
2024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2602              		.loc 1 2024 0
 2603              		.cfi_startproc
 2604              		@ args = 0, pretend = 0, frame = 0
 2605              		@ frame_needed = 0, uses_anonymous_args = 0
 2606              	.LVL237:
 2607 0000 08B5     		push	{r3, lr}
 2608              	.LCFI33:
 2609              		.cfi_def_cfa_offset 8
 2610              		.cfi_offset 3, -8
 2611              		.cfi_offset 14, -4
 2612              	.LVL238:
2027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2613              		.loc 1 2027 0
 2614 0002 806B     		ldr	r0, [r0, #56]
 2615              	.LVL239:
 2616 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 2617              	.LVL240:
2028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2618              		.loc 1 2028 0
 2619 0008 08BD     		pop	{r3, pc}
 2620              		.cfi_endproc
 2621              	.LFE165:
 2623              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 2624              		.align	1
 2625              		.weak	HAL_UART_RxCpltCallback
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 97


 2626              		.syntax unified
 2627              		.thumb
 2628              		.thumb_func
 2629              		.fpu fpv4-sp-d16
 2631              	HAL_UART_RxCpltCallback:
 2632              	.LFB151:
1683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2633              		.loc 1 1683 0
 2634              		.cfi_startproc
 2635              		@ args = 0, pretend = 0, frame = 0
 2636              		@ frame_needed = 0, uses_anonymous_args = 0
 2637              		@ link register save eliminated.
 2638              	.LVL241:
1689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2639              		.loc 1 1689 0
 2640 0000 7047     		bx	lr
 2641              		.cfi_endproc
 2642              	.LFE151:
 2644              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 2645              		.align	1
 2646              		.syntax unified
 2647              		.thumb
 2648              		.thumb_func
 2649              		.fpu fpv4-sp-d16
 2651              	UART_DMAReceiveCplt:
 2652              	.LFB166:
2036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2653              		.loc 1 2036 0
 2654              		.cfi_startproc
 2655              		@ args = 0, pretend = 0, frame = 0
 2656              		@ frame_needed = 0, uses_anonymous_args = 0
 2657              	.LVL242:
 2658 0000 08B5     		push	{r3, lr}
 2659              	.LCFI34:
 2660              		.cfi_def_cfa_offset 8
 2661              		.cfi_offset 3, -8
 2662              		.cfi_offset 14, -4
2037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
 2663              		.loc 1 2037 0
 2664 0002 836B     		ldr	r3, [r0, #56]
 2665              	.LVL243:
2039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2666              		.loc 1 2039 0
 2667 0004 0268     		ldr	r2, [r0]
 2668 0006 1268     		ldr	r2, [r2]
 2669 0008 12F4807F 		tst	r2, #256
 2670 000c 13D1     		bne	.L188
2041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 2671              		.loc 1 2041 0
 2672 000e 0022     		movs	r2, #0
 2673 0010 DA85     		strh	r2, [r3, #46]	@ movhi
2044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2674              		.loc 1 2044 0
 2675 0012 1968     		ldr	r1, [r3]
 2676 0014 CA68     		ldr	r2, [r1, #12]
 2677 0016 22F48072 		bic	r2, r2, #256
 2678 001a CA60     		str	r2, [r1, #12]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 98


2045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2679              		.loc 1 2045 0
 2680 001c 1968     		ldr	r1, [r3]
 2681 001e 4A69     		ldr	r2, [r1, #20]
 2682 0020 22F00102 		bic	r2, r2, #1
 2683 0024 4A61     		str	r2, [r1, #20]
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
 2684              		.loc 1 2049 0
 2685 0026 1968     		ldr	r1, [r3]
 2686 0028 4A69     		ldr	r2, [r1, #20]
 2687 002a 22F04002 		bic	r2, r2, #64
 2688 002e 4A61     		str	r2, [r1, #20]
2052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2689              		.loc 1 2052 0
 2690 0030 2022     		movs	r2, #32
 2691 0032 83F83A20 		strb	r2, [r3, #58]
 2692              	.L188:
2054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2693              		.loc 1 2054 0
 2694 0036 1846     		mov	r0, r3
 2695              	.LVL244:
 2696 0038 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2697              	.LVL245:
2055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2698              		.loc 1 2055 0
 2699 003c 08BD     		pop	{r3, pc}
 2700              		.cfi_endproc
 2701              	.LFE166:
 2703              		.section	.text.UART_Receive_IT,"ax",%progbits
 2704              		.align	1
 2705              		.syntax unified
 2706              		.thumb
 2707              		.thumb_func
 2708              		.fpu fpv4-sp-d16
 2710              	UART_Receive_IT:
 2711              	.LFB179:
2373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
 2712              		.loc 1 2373 0
 2713              		.cfi_startproc
 2714              		@ args = 0, pretend = 0, frame = 0
 2715              		@ frame_needed = 0, uses_anonymous_args = 0
 2716              	.LVL246:
 2717 0000 08B5     		push	{r3, lr}
 2718              	.LCFI35:
 2719              		.cfi_def_cfa_offset 8
 2720              		.cfi_offset 3, -8
 2721              		.cfi_offset 14, -4
2377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2722              		.loc 1 2377 0
 2723 0002 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 2724 0006 DBB2     		uxtb	r3, r3
 2725 0008 222B     		cmp	r3, #34
 2726 000a 40D1     		bne	.L196
2379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2727              		.loc 1 2379 0
 2728 000c 8368     		ldr	r3, [r0, #8]
 2729 000e B3F5805F 		cmp	r3, #4096
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 99


 2730 0012 0ED0     		beq	.L199
2395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2731              		.loc 1 2395 0
 2732 0014 0369     		ldr	r3, [r0, #16]
 2733 0016 03BB     		cbnz	r3, .L195
2397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 2734              		.loc 1 2397 0
 2735 0018 0368     		ldr	r3, [r0]
 2736 001a 5A68     		ldr	r2, [r3, #4]
 2737 001c 836A     		ldr	r3, [r0, #40]
 2738 001e 591C     		adds	r1, r3, #1
 2739 0020 8162     		str	r1, [r0, #40]
 2740 0022 1A70     		strb	r2, [r3]
 2741              	.L194:
2405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2742              		.loc 1 2405 0
 2743 0024 C38D     		ldrh	r3, [r0, #46]
 2744 0026 013B     		subs	r3, r3, #1
 2745 0028 9BB2     		uxth	r3, r3
 2746 002a C385     		strh	r3, [r0, #46]	@ movhi
 2747 002c F3B1     		cbz	r3, .L200
2420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2748              		.loc 1 2420 0
 2749 002e 0020     		movs	r0, #0
 2750              	.LVL247:
 2751 0030 2EE0     		b	.L191
 2752              	.LVL248:
 2753              	.L199:
2381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 2754              		.loc 1 2381 0
 2755 0032 826A     		ldr	r2, [r0, #40]
 2756              	.LVL249:
2382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2757              		.loc 1 2382 0
 2758 0034 0369     		ldr	r3, [r0, #16]
 2759 0036 43B9     		cbnz	r3, .L193
2384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 2U;
 2760              		.loc 1 2384 0
 2761 0038 0368     		ldr	r3, [r0]
 2762 003a 5B68     		ldr	r3, [r3, #4]
 2763 003c C3F30803 		ubfx	r3, r3, #0, #9
 2764 0040 1380     		strh	r3, [r2]	@ movhi
2385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 2765              		.loc 1 2385 0
 2766 0042 836A     		ldr	r3, [r0, #40]
 2767 0044 0233     		adds	r3, r3, #2
 2768 0046 8362     		str	r3, [r0, #40]
 2769 0048 ECE7     		b	.L194
 2770              	.L193:
2389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 1U;
 2771              		.loc 1 2389 0
 2772 004a 0368     		ldr	r3, [r0]
 2773 004c 5B68     		ldr	r3, [r3, #4]
 2774 004e DBB2     		uxtb	r3, r3
 2775 0050 1380     		strh	r3, [r2]	@ movhi
2390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 2776              		.loc 1 2390 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 100


 2777 0052 836A     		ldr	r3, [r0, #40]
 2778 0054 0133     		adds	r3, r3, #1
 2779 0056 8362     		str	r3, [r0, #40]
 2780 0058 E4E7     		b	.L194
 2781              	.LVL250:
 2782              	.L195:
2401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 2783              		.loc 1 2401 0
 2784 005a 0368     		ldr	r3, [r0]
 2785 005c 5B68     		ldr	r3, [r3, #4]
 2786 005e 826A     		ldr	r2, [r0, #40]
 2787 0060 511C     		adds	r1, r2, #1
 2788 0062 8162     		str	r1, [r0, #40]
 2789 0064 03F07F03 		and	r3, r3, #127
 2790 0068 1370     		strb	r3, [r2]
 2791 006a DBE7     		b	.L194
 2792              	.L200:
2408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2793              		.loc 1 2408 0
 2794 006c 0268     		ldr	r2, [r0]
 2795 006e D368     		ldr	r3, [r2, #12]
 2796 0070 23F49073 		bic	r3, r3, #288
 2797 0074 D360     		str	r3, [r2, #12]
2411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2798              		.loc 1 2411 0
 2799 0076 0268     		ldr	r2, [r0]
 2800 0078 5369     		ldr	r3, [r2, #20]
 2801 007a 23F00103 		bic	r3, r3, #1
 2802 007e 5361     		str	r3, [r2, #20]
2414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      
 2803              		.loc 1 2414 0
 2804 0080 2023     		movs	r3, #32
 2805 0082 80F83A30 		strb	r3, [r0, #58]
2416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2806              		.loc 1 2416 0
 2807 0086 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2808              	.LVL251:
2418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2809              		.loc 1 2418 0
 2810 008a 0020     		movs	r0, #0
 2811 008c 00E0     		b	.L191
 2812              	.LVL252:
 2813              	.L196:
2424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2814              		.loc 1 2424 0
 2815 008e 0220     		movs	r0, #2
 2816              	.LVL253:
 2817              	.L191:
2426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2818              		.loc 1 2426 0
 2819 0090 08BD     		pop	{r3, pc}
 2820              		.cfi_endproc
 2821              	.LFE179:
 2823              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 2824              		.align	1
 2825              		.weak	HAL_UART_RxHalfCpltCallback
 2826              		.syntax unified
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 101


 2827              		.thumb
 2828              		.thumb_func
 2829              		.fpu fpv4-sp-d16
 2831              	HAL_UART_RxHalfCpltCallback:
 2832              	.LFB152:
1698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2833              		.loc 1 1698 0
 2834              		.cfi_startproc
 2835              		@ args = 0, pretend = 0, frame = 0
 2836              		@ frame_needed = 0, uses_anonymous_args = 0
 2837              		@ link register save eliminated.
 2838              	.LVL254:
1704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2839              		.loc 1 1704 0
 2840 0000 7047     		bx	lr
 2841              		.cfi_endproc
 2842              	.LFE152:
 2844              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 2845              		.align	1
 2846              		.syntax unified
 2847              		.thumb
 2848              		.thumb_func
 2849              		.fpu fpv4-sp-d16
 2851              	UART_DMARxHalfCplt:
 2852              	.LFB167:
2064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2853              		.loc 1 2064 0
 2854              		.cfi_startproc
 2855              		@ args = 0, pretend = 0, frame = 0
 2856              		@ frame_needed = 0, uses_anonymous_args = 0
 2857              	.LVL255:
 2858 0000 08B5     		push	{r3, lr}
 2859              	.LCFI36:
 2860              		.cfi_def_cfa_offset 8
 2861              		.cfi_offset 3, -8
 2862              		.cfi_offset 14, -4
 2863              	.LVL256:
2067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2864              		.loc 1 2067 0
 2865 0002 806B     		ldr	r0, [r0, #56]
 2866              	.LVL257:
 2867 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 2868              	.LVL258:
2068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2869              		.loc 1 2068 0
 2870 0008 08BD     		pop	{r3, pc}
 2871              		.cfi_endproc
 2872              	.LFE167:
 2874              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 2875              		.align	1
 2876              		.weak	HAL_UART_ErrorCallback
 2877              		.syntax unified
 2878              		.thumb
 2879              		.thumb_func
 2880              		.fpu fpv4-sp-d16
 2882              	HAL_UART_ErrorCallback:
 2883              	.LFB153:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 102


1713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2884              		.loc 1 1713 0
 2885              		.cfi_startproc
 2886              		@ args = 0, pretend = 0, frame = 0
 2887              		@ frame_needed = 0, uses_anonymous_args = 0
 2888              		@ link register save eliminated.
 2889              	.LVL259:
1719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2890              		.loc 1 1719 0
 2891 0000 7047     		bx	lr
 2892              		.cfi_endproc
 2893              	.LFE153:
 2895              		.section	.text.UART_DMAError,"ax",%progbits
 2896              		.align	1
 2897              		.syntax unified
 2898              		.thumb
 2899              		.thumb_func
 2900              		.fpu fpv4-sp-d16
 2902              	UART_DMAError:
 2903              	.LFB168:
2076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2904              		.loc 1 2076 0
 2905              		.cfi_startproc
 2906              		@ args = 0, pretend = 0, frame = 0
 2907              		@ frame_needed = 0, uses_anonymous_args = 0
 2908              	.LVL260:
 2909 0000 10B5     		push	{r4, lr}
 2910              	.LCFI37:
 2911              		.cfi_def_cfa_offset 8
 2912              		.cfi_offset 4, -8
 2913              		.cfi_offset 14, -4
 2914              	.LVL261:
2078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2915              		.loc 1 2078 0
 2916 0002 846B     		ldr	r4, [r0, #56]
 2917              	.LVL262:
2081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2918              		.loc 1 2081 0
 2919 0004 2368     		ldr	r3, [r4]
 2920 0006 5A69     		ldr	r2, [r3, #20]
 2921              	.LVL263:
2082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2922              		.loc 1 2082 0
 2923 0008 94F83930 		ldrb	r3, [r4, #57]	@ zero_extendqisi2
 2924 000c DBB2     		uxtb	r3, r3
 2925 000e 212B     		cmp	r3, #33
 2926 0010 10D0     		beq	.L209
 2927              	.LVL264:
 2928              	.L206:
2089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2929              		.loc 1 2089 0
 2930 0012 2368     		ldr	r3, [r4]
 2931 0014 5A69     		ldr	r2, [r3, #20]
 2932 0016 02F04002 		and	r2, r2, #64
 2933              	.LVL265:
2090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2934              		.loc 1 2090 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 103


 2935 001a 94F83A30 		ldrb	r3, [r4, #58]	@ zero_extendqisi2
 2936 001e DBB2     		uxtb	r3, r3
 2937 0020 222B     		cmp	r3, #34
 2938 0022 11D0     		beq	.L210
 2939              	.LVL266:
 2940              	.L207:
2096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 2941              		.loc 1 2096 0
 2942 0024 E36B     		ldr	r3, [r4, #60]
 2943 0026 43F01003 		orr	r3, r3, #16
 2944 002a E363     		str	r3, [r4, #60]
2097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2945              		.loc 1 2097 0
 2946 002c 2046     		mov	r0, r4
 2947 002e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2948              	.LVL267:
2098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2949              		.loc 1 2098 0
 2950 0032 10BD     		pop	{r4, pc}
 2951              	.LVL268:
 2952              	.L209:
 2953 0034 02F08002 		and	r2, r2, #128
 2954              	.LVL269:
2082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2955              		.loc 1 2082 0 discriminator 1
 2956 0038 002A     		cmp	r2, #0
 2957 003a EAD0     		beq	.L206
2084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2958              		.loc 1 2084 0
 2959 003c 0023     		movs	r3, #0
 2960 003e E384     		strh	r3, [r4, #38]	@ movhi
2085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2961              		.loc 1 2085 0
 2962 0040 2046     		mov	r0, r4
 2963              	.LVL270:
 2964 0042 FFF7FEFF 		bl	UART_EndTxTransfer
 2965              	.LVL271:
 2966 0046 E4E7     		b	.L206
 2967              	.LVL272:
 2968              	.L210:
2090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2969              		.loc 1 2090 0 discriminator 1
 2970 0048 002A     		cmp	r2, #0
 2971 004a EBD0     		beq	.L207
2092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2972              		.loc 1 2092 0
 2973 004c 0023     		movs	r3, #0
 2974 004e E385     		strh	r3, [r4, #46]	@ movhi
2093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2975              		.loc 1 2093 0
 2976 0050 2046     		mov	r0, r4
 2977 0052 FFF7FEFF 		bl	UART_EndRxTransfer
 2978              	.LVL273:
 2979 0056 E5E7     		b	.L207
 2980              		.cfi_endproc
 2981              	.LFE168:
 2983              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 104


 2984              		.align	1
 2985              		.global	HAL_UART_IRQHandler
 2986              		.syntax unified
 2987              		.thumb
 2988              		.thumb_func
 2989              		.fpu fpv4-sp-d16
 2991              	HAL_UART_IRQHandler:
 2992              	.LFB148:
1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t isrflags   = READ_REG(huart->Instance->SR);
 2993              		.loc 1 1526 0
 2994              		.cfi_startproc
 2995              		@ args = 0, pretend = 0, frame = 0
 2996              		@ frame_needed = 0, uses_anonymous_args = 0
 2997              	.LVL274:
 2998 0000 10B5     		push	{r4, lr}
 2999              	.LCFI38:
 3000              		.cfi_def_cfa_offset 8
 3001              		.cfi_offset 4, -8
 3002              		.cfi_offset 14, -4
 3003 0002 0446     		mov	r4, r0
1527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 3004              		.loc 1 1527 0
 3005 0004 0268     		ldr	r2, [r0]
 3006 0006 1368     		ldr	r3, [r2]
 3007              	.LVL275:
1528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 3008              		.loc 1 1528 0
 3009 0008 D168     		ldr	r1, [r2, #12]
 3010              	.LVL276:
1529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t errorflags = 0x00U;
 3011              		.loc 1 1529 0
 3012 000a 5269     		ldr	r2, [r2, #20]
 3013              	.LVL277:
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3014              		.loc 1 1535 0
 3015 000c 13F00F00 		ands	r0, r3, #15
 3016              	.LVL278:
 3017 0010 05D1     		bne	.L212
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3018              		.loc 1 1538 0
 3019 0012 13F0200F 		tst	r3, #32
 3020 0016 02D0     		beq	.L212
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3021              		.loc 1 1538 0 is_stmt 0 discriminator 1
 3022 0018 11F0200F 		tst	r1, #32
 3023 001c 53D1     		bne	.L227
 3024              	.L212:
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3025              		.loc 1 1546 0 is_stmt 1
 3026 001e 0028     		cmp	r0, #0
 3027 0020 67D0     		beq	.L214
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3028              		.loc 1 1546 0 is_stmt 0 discriminator 1
 3029 0022 12F00102 		ands	r2, r2, #1
 3030              	.LVL279:
 3031 0026 02D1     		bne	.L215
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 105


 3032              		.loc 1 1546 0 discriminator 2
 3033 0028 11F4907F 		tst	r1, #288
 3034 002c 61D0     		beq	.L214
 3035              	.L215:
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3036              		.loc 1 1549 0 is_stmt 1
 3037 002e 13F0010F 		tst	r3, #1
 3038 0032 06D0     		beq	.L216
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3039              		.loc 1 1549 0 is_stmt 0 discriminator 1
 3040 0034 11F4807F 		tst	r1, #256
 3041 0038 03D0     		beq	.L216
1551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3042              		.loc 1 1551 0 is_stmt 1
 3043 003a E06B     		ldr	r0, [r4, #60]
 3044              	.LVL280:
 3045 003c 40F00100 		orr	r0, r0, #1
 3046 0040 E063     		str	r0, [r4, #60]
 3047              	.L216:
1555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3048              		.loc 1 1555 0
 3049 0042 13F0040F 		tst	r3, #4
 3050 0046 04D0     		beq	.L217
1555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3051              		.loc 1 1555 0 is_stmt 0 discriminator 1
 3052 0048 1AB1     		cbz	r2, .L217
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3053              		.loc 1 1557 0 is_stmt 1
 3054 004a E06B     		ldr	r0, [r4, #60]
 3055 004c 40F00200 		orr	r0, r0, #2
 3056 0050 E063     		str	r0, [r4, #60]
 3057              	.L217:
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3058              		.loc 1 1561 0
 3059 0052 13F0020F 		tst	r3, #2
 3060 0056 04D0     		beq	.L218
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3061              		.loc 1 1561 0 is_stmt 0 discriminator 1
 3062 0058 1AB1     		cbz	r2, .L218
1563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3063              		.loc 1 1563 0 is_stmt 1
 3064 005a E06B     		ldr	r0, [r4, #60]
 3065 005c 40F00400 		orr	r0, r0, #4
 3066 0060 E063     		str	r0, [r4, #60]
 3067              	.L218:
1567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
 3068              		.loc 1 1567 0
 3069 0062 13F0080F 		tst	r3, #8
 3070 0066 04D0     		beq	.L219
1567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
 3071              		.loc 1 1567 0 is_stmt 0 discriminator 1
 3072 0068 1AB1     		cbz	r2, .L219
1569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3073              		.loc 1 1569 0 is_stmt 1
 3074 006a E26B     		ldr	r2, [r4, #60]
 3075 006c 42F00802 		orr	r2, r2, #8
 3076 0070 E263     		str	r2, [r4, #60]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 106


 3077              	.L219:
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3078              		.loc 1 1573 0
 3079 0072 E26B     		ldr	r2, [r4, #60]
 3080 0074 002A     		cmp	r2, #0
 3081 0076 48D0     		beq	.L211
1576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3082              		.loc 1 1576 0
 3083 0078 13F0200F 		tst	r3, #32
 3084 007c 02D0     		beq	.L220
1576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3085              		.loc 1 1576 0 is_stmt 0 discriminator 1
 3086 007e 11F0200F 		tst	r1, #32
 3087 0082 24D1     		bne	.L228
 3088              	.LVL281:
 3089              	.L220:
1583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 3090              		.loc 1 1583 0 is_stmt 1
 3091 0084 2368     		ldr	r3, [r4]
 3092 0086 5B69     		ldr	r3, [r3, #20]
 3093 0088 03F04003 		and	r3, r3, #64
 3094              	.LVL282:
1584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3095              		.loc 1 1584 0
 3096 008c E26B     		ldr	r2, [r4, #60]
 3097 008e 12F0080F 		tst	r2, #8
 3098 0092 00D1     		bne	.L221
1584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3099              		.loc 1 1584 0 is_stmt 0 discriminator 1
 3100 0094 3BB3     		cbz	r3, .L222
 3101              	.L221:
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 3102              		.loc 1 1589 0 is_stmt 1
 3103 0096 2046     		mov	r0, r4
 3104 0098 FFF7FEFF 		bl	UART_EndRxTransfer
 3105              	.LVL283:
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 3106              		.loc 1 1592 0
 3107 009c 2368     		ldr	r3, [r4]
 3108 009e 5A69     		ldr	r2, [r3, #20]
 3109 00a0 12F0400F 		tst	r2, #64
 3110 00a4 1BD0     		beq	.L223
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           
 3111              		.loc 1 1594 0
 3112 00a6 5A69     		ldr	r2, [r3, #20]
 3113 00a8 22F04002 		bic	r2, r2, #64
 3114 00ac 5A61     		str	r2, [r3, #20]
1597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
 3115              		.loc 1 1597 0
 3116 00ae 636B     		ldr	r3, [r4, #52]
 3117 00b0 8BB1     		cbz	r3, .L224
1601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3118              		.loc 1 1601 0
 3119 00b2 1A4A     		ldr	r2, .L231
 3120 00b4 1A65     		str	r2, [r3, #80]
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             {
 3121              		.loc 1 1602 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 107


 3122 00b6 606B     		ldr	r0, [r4, #52]
 3123 00b8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3124              	.LVL284:
 3125 00bc 28B3     		cbz	r0, .L211
1605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             }
 3126              		.loc 1 1605 0
 3127 00be 606B     		ldr	r0, [r4, #52]
 3128 00c0 036D     		ldr	r3, [r0, #80]
 3129 00c2 9847     		blx	r3
 3130              	.LVL285:
 3131 00c4 21E0     		b	.L211
 3132              	.LVL286:
 3133              	.L227:
1540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
 3134              		.loc 1 1540 0
 3135 00c6 2046     		mov	r0, r4
 3136              	.LVL287:
 3137 00c8 FFF7FEFF 		bl	UART_Receive_IT
 3138              	.LVL288:
1541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3139              		.loc 1 1541 0
 3140 00cc 1DE0     		b	.L211
 3141              	.LVL289:
 3142              	.L228:
1578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3143              		.loc 1 1578 0
 3144 00ce 2046     		mov	r0, r4
 3145 00d0 FFF7FEFF 		bl	UART_Receive_IT
 3146              	.LVL290:
 3147 00d4 D6E7     		b	.L220
 3148              	.LVL291:
 3149              	.L224:
1611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
 3150              		.loc 1 1611 0
 3151 00d6 2046     		mov	r0, r4
 3152 00d8 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3153              	.LVL292:
 3154 00dc 15E0     		b	.L211
 3155              	.L223:
1617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 3156              		.loc 1 1617 0
 3157 00de 2046     		mov	r0, r4
 3158 00e0 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3159              	.LVL293:
 3160 00e4 11E0     		b	.L211
 3161              	.LVL294:
 3162              	.L222:
1624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 3163              		.loc 1 1624 0
 3164 00e6 2046     		mov	r0, r4
 3165 00e8 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3166              	.LVL295:
1625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3167              		.loc 1 1625 0
 3168 00ec 0023     		movs	r3, #0
 3169 00ee E363     		str	r3, [r4, #60]
 3170 00f0 0BE0     		b	.L211
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 108


 3171              	.LVL296:
 3172              	.L214:
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3173              		.loc 1 1632 0
 3174 00f2 13F0800F 		tst	r3, #128
 3175 00f6 02D0     		beq	.L225
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3176              		.loc 1 1632 0 is_stmt 0 discriminator 1
 3177 00f8 11F0800F 		tst	r1, #128
 3178 00fc 06D1     		bne	.L229
 3179              	.L225:
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3180              		.loc 1 1639 0 is_stmt 1
 3181 00fe 13F0400F 		tst	r3, #64
 3182 0102 02D0     		beq	.L211
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3183              		.loc 1 1639 0 is_stmt 0 discriminator 1
 3184 0104 11F0400F 		tst	r1, #64
 3185 0108 04D1     		bne	.L230
 3186              	.LVL297:
 3187              	.L211:
1644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3188              		.loc 1 1644 0 is_stmt 1
 3189 010a 10BD     		pop	{r4, pc}
 3190              	.LVL298:
 3191              	.L229:
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 3192              		.loc 1 1634 0
 3193 010c 2046     		mov	r0, r4
 3194              	.LVL299:
 3195 010e FFF7FEFF 		bl	UART_Transmit_IT
 3196              	.LVL300:
1635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3197              		.loc 1 1635 0
 3198 0112 FAE7     		b	.L211
 3199              	.LVL301:
 3200              	.L230:
1641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 3201              		.loc 1 1641 0
 3202 0114 2046     		mov	r0, r4
 3203              	.LVL302:
 3204 0116 FFF7FEFF 		bl	UART_EndTransmit_IT
 3205              	.LVL303:
1642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3206              		.loc 1 1642 0
 3207 011a F6E7     		b	.L211
 3208              	.L232:
 3209              		.align	2
 3210              	.L231:
 3211 011c 00000000 		.word	UART_DMAAbortOnError
 3212              		.cfi_endproc
 3213              	.LFE148:
 3215              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 3216              		.align	1
 3217              		.syntax unified
 3218              		.thumb
 3219              		.thumb_func
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 109


 3220              		.fpu fpv4-sp-d16
 3222              	UART_DMAAbortOnError:
 3223              	.LFB172:
2174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3224              		.loc 1 2174 0
 3225              		.cfi_startproc
 3226              		@ args = 0, pretend = 0, frame = 0
 3227              		@ frame_needed = 0, uses_anonymous_args = 0
 3228              	.LVL304:
 3229 0000 08B5     		push	{r3, lr}
 3230              	.LCFI39:
 3231              		.cfi_def_cfa_offset 8
 3232              		.cfi_offset 3, -8
 3233              		.cfi_offset 14, -4
2175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3234              		.loc 1 2175 0
 3235 0002 806B     		ldr	r0, [r0, #56]
 3236              	.LVL305:
2176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 3237              		.loc 1 2176 0
 3238 0004 0023     		movs	r3, #0
 3239 0006 C385     		strh	r3, [r0, #46]	@ movhi
2177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3240              		.loc 1 2177 0
 3241 0008 C384     		strh	r3, [r0, #38]	@ movhi
2179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3242              		.loc 1 2179 0
 3243 000a FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3244              	.LVL306:
2180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3245              		.loc 1 2180 0
 3246 000e 08BD     		pop	{r3, pc}
 3247              		.cfi_endproc
 3248              	.LFE172:
 3250              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 3251              		.align	1
 3252              		.weak	HAL_UART_AbortCpltCallback
 3253              		.syntax unified
 3254              		.thumb
 3255              		.thumb_func
 3256              		.fpu fpv4-sp-d16
 3258              	HAL_UART_AbortCpltCallback:
 3259              	.LFB154:
1727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3260              		.loc 1 1727 0
 3261              		.cfi_startproc
 3262              		@ args = 0, pretend = 0, frame = 0
 3263              		@ frame_needed = 0, uses_anonymous_args = 0
 3264              		@ link register save eliminated.
 3265              	.LVL307:
1734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 3266              		.loc 1 1734 0
 3267 0000 7047     		bx	lr
 3268              		.cfi_endproc
 3269              	.LFE154:
 3271              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 3272              		.align	1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 110


 3273              		.global	HAL_UART_Abort_IT
 3274              		.syntax unified
 3275              		.thumb
 3276              		.thumb_func
 3277              		.fpu fpv4-sp-d16
 3279              	HAL_UART_Abort_IT:
 3280              	.LFB145:
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 3281              		.loc 1 1281 0
 3282              		.cfi_startproc
 3283              		@ args = 0, pretend = 0, frame = 0
 3284              		@ frame_needed = 0, uses_anonymous_args = 0
 3285              	.LVL308:
 3286 0000 10B5     		push	{r4, lr}
 3287              	.LCFI40:
 3288              		.cfi_def_cfa_offset 8
 3289              		.cfi_offset 4, -8
 3290              		.cfi_offset 14, -4
 3291 0002 0446     		mov	r4, r0
 3292              	.LVL309:
1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3293              		.loc 1 1285 0
 3294 0004 0268     		ldr	r2, [r0]
 3295 0006 D368     		ldr	r3, [r2, #12]
 3296 0008 23F4F073 		bic	r3, r3, #480
 3297 000c D360     		str	r3, [r2, #12]
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3298              		.loc 1 1286 0
 3299 000e 0268     		ldr	r2, [r0]
 3300 0010 5369     		ldr	r3, [r2, #20]
 3301 0012 23F00103 		bic	r3, r3, #1
 3302 0016 5361     		str	r3, [r2, #20]
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3303              		.loc 1 1291 0
 3304 0018 036B     		ldr	r3, [r0, #48]
 3305 001a 33B1     		cbz	r3, .L237
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3306              		.loc 1 1295 0
 3307 001c 0268     		ldr	r2, [r0]
 3308 001e 5269     		ldr	r2, [r2, #20]
 3309 0020 12F0800F 		tst	r2, #128
 3310 0024 1DD0     		beq	.L238
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3311              		.loc 1 1297 0
 3312 0026 254A     		ldr	r2, .L249
 3313 0028 1A65     		str	r2, [r3, #80]
 3314              	.L237:
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3315              		.loc 1 1305 0
 3316 002a 636B     		ldr	r3, [r4, #52]
 3317 002c 33B1     		cbz	r3, .L239
1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3318              		.loc 1 1309 0
 3319 002e 2268     		ldr	r2, [r4]
 3320 0030 5269     		ldr	r2, [r2, #20]
 3321 0032 12F0400F 		tst	r2, #64
 3322 0036 17D0     		beq	.L240
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 111


1311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3323              		.loc 1 1311 0
 3324 0038 214A     		ldr	r2, .L249+4
 3325 003a 1A65     		str	r2, [r3, #80]
 3326              	.L239:
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3327              		.loc 1 1320 0
 3328 003c 2368     		ldr	r3, [r4]
 3329 003e 5A69     		ldr	r2, [r3, #20]
 3330 0040 12F0800F 		tst	r2, #128
 3331 0044 13D0     		beq	.L245
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3332              		.loc 1 1323 0
 3333 0046 5A69     		ldr	r2, [r3, #20]
 3334 0048 22F08002 		bic	r2, r2, #128
 3335 004c 5A61     		str	r2, [r3, #20]
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3336              		.loc 1 1326 0
 3337 004e 206B     		ldr	r0, [r4, #48]
 3338              	.LVL310:
 3339 0050 60B3     		cbz	r0, .L246
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3340              		.loc 1 1332 0
 3341 0052 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3342              	.LVL311:
 3343 0056 58B3     		cbz	r0, .L247
1334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3344              		.loc 1 1334 0
 3345 0058 236B     		ldr	r3, [r4, #48]
 3346 005a 0022     		movs	r2, #0
 3347 005c 1A65     		str	r2, [r3, #80]
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3348              		.loc 1 1282 0
 3349 005e 0121     		movs	r1, #1
 3350 0060 06E0     		b	.L241
 3351              	.LVL312:
 3352              	.L238:
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3353              		.loc 1 1301 0
 3354 0062 0022     		movs	r2, #0
 3355 0064 1A65     		str	r2, [r3, #80]
 3356 0066 E0E7     		b	.L237
 3357              	.L240:
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3358              		.loc 1 1315 0
 3359 0068 0022     		movs	r2, #0
 3360 006a 1A65     		str	r2, [r3, #80]
 3361 006c E6E7     		b	.L239
 3362              	.L245:
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3363              		.loc 1 1282 0
 3364 006e 0121     		movs	r1, #1
 3365              	.LVL313:
 3366              	.L241:
1344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3367              		.loc 1 1344 0
 3368 0070 2368     		ldr	r3, [r4]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 112


 3369 0072 5A69     		ldr	r2, [r3, #20]
 3370 0074 12F0400F 		tst	r2, #64
 3371 0078 1CD0     		beq	.L242
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3372              		.loc 1 1346 0
 3373 007a 5A69     		ldr	r2, [r3, #20]
 3374 007c 22F04002 		bic	r2, r2, #64
 3375 0080 5A61     		str	r2, [r3, #20]
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3376              		.loc 1 1349 0
 3377 0082 606B     		ldr	r0, [r4, #52]
 3378 0084 B0B1     		cbz	r0, .L242
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3379              		.loc 1 1355 0
 3380 0086 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3381              	.LVL314:
 3382 008a A8B1     		cbz	r0, .L243
1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x01U;
 3383              		.loc 1 1357 0
 3384 008c 636B     		ldr	r3, [r4, #52]
 3385 008e 0022     		movs	r2, #0
 3386 0090 1A65     		str	r2, [r3, #80]
 3387              	.LVL315:
 3388              	.L244:
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 3389              		.loc 1 1371 0
 3390 0092 0023     		movs	r3, #0
 3391 0094 E384     		strh	r3, [r4, #38]	@ movhi
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3392              		.loc 1 1372 0
 3393 0096 E385     		strh	r3, [r4, #46]	@ movhi
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3394              		.loc 1 1375 0
 3395 0098 E363     		str	r3, [r4, #60]
1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3396              		.loc 1 1378 0
 3397 009a 2023     		movs	r3, #32
 3398 009c 84F83930 		strb	r3, [r4, #57]
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3399              		.loc 1 1379 0
 3400 00a0 84F83A30 		strb	r3, [r4, #58]
1382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3401              		.loc 1 1382 0
 3402 00a4 2046     		mov	r0, r4
 3403 00a6 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3404              	.LVL316:
 3405 00aa 05E0     		b	.L243
 3406              	.LVL317:
 3407              	.L246:
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3408              		.loc 1 1282 0
 3409 00ac 0121     		movs	r1, #1
 3410 00ae DFE7     		b	.L241
 3411              	.L247:
1338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3412              		.loc 1 1338 0
 3413 00b0 0021     		movs	r1, #0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 113


 3414 00b2 DDE7     		b	.L241
 3415              	.LVL318:
 3416              	.L242:
1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3417              		.loc 1 1368 0
 3418 00b4 0029     		cmp	r1, #0
 3419 00b6 ECD1     		bne	.L244
 3420              	.LVL319:
 3421              	.L243:
1386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3422              		.loc 1 1386 0
 3423 00b8 0020     		movs	r0, #0
 3424 00ba 10BD     		pop	{r4, pc}
 3425              	.LVL320:
 3426              	.L250:
 3427              		.align	2
 3428              	.L249:
 3429 00bc 00000000 		.word	UART_DMATxAbortCallback
 3430 00c0 00000000 		.word	UART_DMARxAbortCallback
 3431              		.cfi_endproc
 3432              	.LFE145:
 3434              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 3435              		.align	1
 3436              		.syntax unified
 3437              		.thumb
 3438              		.thumb_func
 3439              		.fpu fpv4-sp-d16
 3441              	UART_DMARxAbortCallback:
 3442              	.LFB174:
2229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3443              		.loc 1 2229 0
 3444              		.cfi_startproc
 3445              		@ args = 0, pretend = 0, frame = 0
 3446              		@ frame_needed = 0, uses_anonymous_args = 0
 3447              	.LVL321:
 3448 0000 08B5     		push	{r3, lr}
 3449              	.LCFI41:
 3450              		.cfi_def_cfa_offset 8
 3451              		.cfi_offset 3, -8
 3452              		.cfi_offset 14, -4
2230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3453              		.loc 1 2230 0
 3454 0002 806B     		ldr	r0, [r0, #56]
 3455              	.LVL322:
2232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3456              		.loc 1 2232 0
 3457 0004 436B     		ldr	r3, [r0, #52]
 3458 0006 0022     		movs	r2, #0
 3459 0008 1A65     		str	r2, [r3, #80]
2235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3460              		.loc 1 2235 0
 3461 000a 036B     		ldr	r3, [r0, #48]
 3462 000c 13B1     		cbz	r3, .L252
2237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3463              		.loc 1 2237 0
 3464 000e 1B6D     		ldr	r3, [r3, #80]
 3465 0010 03B1     		cbz	r3, .L252
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 114


 3466              	.LVL323:
 3467              	.L251:
2256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3468              		.loc 1 2256 0
 3469 0012 08BD     		pop	{r3, pc}
 3470              	.LVL324:
 3471              	.L252:
2244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3472              		.loc 1 2244 0
 3473 0014 0023     		movs	r3, #0
 3474 0016 C384     		strh	r3, [r0, #38]	@ movhi
2245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3475              		.loc 1 2245 0
 3476 0018 C385     		strh	r3, [r0, #46]	@ movhi
2248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3477              		.loc 1 2248 0
 3478 001a C363     		str	r3, [r0, #60]
2251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3479              		.loc 1 2251 0
 3480 001c 2023     		movs	r3, #32
 3481 001e 80F83930 		strb	r3, [r0, #57]
2252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3482              		.loc 1 2252 0
 3483 0022 80F83A30 		strb	r3, [r0, #58]
2255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3484              		.loc 1 2255 0
 3485 0026 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3486              	.LVL325:
 3487 002a F2E7     		b	.L251
 3488              		.cfi_endproc
 3489              	.LFE174:
 3491              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 3492              		.align	1
 3493              		.syntax unified
 3494              		.thumb
 3495              		.thumb_func
 3496              		.fpu fpv4-sp-d16
 3498              	UART_DMATxAbortCallback:
 3499              	.LFB173:
2191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3500              		.loc 1 2191 0
 3501              		.cfi_startproc
 3502              		@ args = 0, pretend = 0, frame = 0
 3503              		@ frame_needed = 0, uses_anonymous_args = 0
 3504              	.LVL326:
 3505 0000 08B5     		push	{r3, lr}
 3506              	.LCFI42:
 3507              		.cfi_def_cfa_offset 8
 3508              		.cfi_offset 3, -8
 3509              		.cfi_offset 14, -4
2192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3510              		.loc 1 2192 0
 3511 0002 806B     		ldr	r0, [r0, #56]
 3512              	.LVL327:
2194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3513              		.loc 1 2194 0
 3514 0004 036B     		ldr	r3, [r0, #48]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 115


 3515 0006 0022     		movs	r2, #0
 3516 0008 1A65     		str	r2, [r3, #80]
2197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3517              		.loc 1 2197 0
 3518 000a 436B     		ldr	r3, [r0, #52]
 3519 000c 13B1     		cbz	r3, .L256
2199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3520              		.loc 1 2199 0
 3521 000e 1B6D     		ldr	r3, [r3, #80]
 3522 0010 03B1     		cbz	r3, .L256
 3523              	.LVL328:
 3524              	.L255:
2218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3525              		.loc 1 2218 0
 3526 0012 08BD     		pop	{r3, pc}
 3527              	.LVL329:
 3528              	.L256:
2206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3529              		.loc 1 2206 0
 3530 0014 0023     		movs	r3, #0
 3531 0016 C384     		strh	r3, [r0, #38]	@ movhi
2207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3532              		.loc 1 2207 0
 3533 0018 C385     		strh	r3, [r0, #46]	@ movhi
2210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3534              		.loc 1 2210 0
 3535 001a C363     		str	r3, [r0, #60]
2213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3536              		.loc 1 2213 0
 3537 001c 2023     		movs	r3, #32
 3538 001e 80F83930 		strb	r3, [r0, #57]
2214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3539              		.loc 1 2214 0
 3540 0022 80F83A30 		strb	r3, [r0, #58]
2217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3541              		.loc 1 2217 0
 3542 0026 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3543              	.LVL330:
 3544 002a F2E7     		b	.L255
 3545              		.cfi_endproc
 3546              	.LFE173:
 3548              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 3549              		.align	1
 3550              		.weak	HAL_UART_AbortTransmitCpltCallback
 3551              		.syntax unified
 3552              		.thumb
 3553              		.thumb_func
 3554              		.fpu fpv4-sp-d16
 3556              	HAL_UART_AbortTransmitCpltCallback:
 3557              	.LFB155:
1741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3558              		.loc 1 1741 0
 3559              		.cfi_startproc
 3560              		@ args = 0, pretend = 0, frame = 0
 3561              		@ frame_needed = 0, uses_anonymous_args = 0
 3562              		@ link register save eliminated.
 3563              	.LVL331:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 116


1748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3564              		.loc 1 1748 0
 3565 0000 7047     		bx	lr
 3566              		.cfi_endproc
 3567              	.LFE155:
 3569              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 3570              		.align	1
 3571              		.global	HAL_UART_AbortTransmit_IT
 3572              		.syntax unified
 3573              		.thumb
 3574              		.thumb_func
 3575              		.fpu fpv4-sp-d16
 3577              	HAL_UART_AbortTransmit_IT:
 3578              	.LFB146:
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 3579              		.loc 1 1403 0
 3580              		.cfi_startproc
 3581              		@ args = 0, pretend = 0, frame = 0
 3582              		@ frame_needed = 0, uses_anonymous_args = 0
 3583              	.LVL332:
 3584 0000 10B5     		push	{r4, lr}
 3585              	.LCFI43:
 3586              		.cfi_def_cfa_offset 8
 3587              		.cfi_offset 4, -8
 3588              		.cfi_offset 14, -4
 3589 0002 0446     		mov	r4, r0
1405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3590              		.loc 1 1405 0
 3591 0004 0268     		ldr	r2, [r0]
 3592 0006 D368     		ldr	r3, [r2, #12]
 3593 0008 23F0C003 		bic	r3, r3, #192
 3594 000c D360     		str	r3, [r2, #12]
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3595              		.loc 1 1408 0
 3596 000e 0368     		ldr	r3, [r0]
 3597 0010 5A69     		ldr	r2, [r3, #20]
 3598 0012 12F0800F 		tst	r2, #128
 3599 0016 18D0     		beq	.L261
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3600              		.loc 1 1410 0
 3601 0018 5A69     		ldr	r2, [r3, #20]
 3602 001a 22F08002 		bic	r2, r2, #128
 3603 001e 5A61     		str	r2, [r3, #20]
1413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3604              		.loc 1 1413 0
 3605 0020 036B     		ldr	r3, [r0, #48]
 3606 0022 53B1     		cbz	r3, .L262
1417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3607              		.loc 1 1417 0
 3608 0024 0D4A     		ldr	r2, .L265
 3609 0026 1A65     		str	r2, [r3, #80]
1420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3610              		.loc 1 1420 0
 3611 0028 006B     		ldr	r0, [r0, #48]
 3612              	.LVL333:
 3613 002a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3614              	.LVL334:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 117


 3615 002e 10B1     		cbz	r0, .L263
1423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3616              		.loc 1 1423 0
 3617 0030 206B     		ldr	r0, [r4, #48]
 3618 0032 036D     		ldr	r3, [r0, #80]
 3619 0034 9847     		blx	r3
 3620              	.LVL335:
 3621              	.L263:
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3622              		.loc 1 1451 0
 3623 0036 0020     		movs	r0, #0
 3624 0038 10BD     		pop	{r4, pc}
 3625              	.LVL336:
 3626              	.L262:
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3627              		.loc 1 1429 0
 3628 003a 0023     		movs	r3, #0
 3629 003c C384     		strh	r3, [r0, #38]	@ movhi
1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3630              		.loc 1 1432 0
 3631 003e 2023     		movs	r3, #32
 3632 0040 80F83930 		strb	r3, [r0, #57]
1435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3633              		.loc 1 1435 0
 3634 0044 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3635              	.LVL337:
 3636 0048 F5E7     		b	.L263
 3637              	.LVL338:
 3638              	.L261:
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3639              		.loc 1 1441 0
 3640 004a 0023     		movs	r3, #0
 3641 004c C384     		strh	r3, [r0, #38]	@ movhi
1444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3642              		.loc 1 1444 0
 3643 004e 2023     		movs	r3, #32
 3644 0050 80F83930 		strb	r3, [r0, #57]
1447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3645              		.loc 1 1447 0
 3646 0054 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3647              	.LVL339:
 3648 0058 EDE7     		b	.L263
 3649              	.L266:
 3650 005a 00BF     		.align	2
 3651              	.L265:
 3652 005c 00000000 		.word	UART_DMATxOnlyAbortCallback
 3653              		.cfi_endproc
 3654              	.LFE146:
 3656              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 3657              		.align	1
 3658              		.syntax unified
 3659              		.thumb
 3660              		.thumb_func
 3661              		.fpu fpv4-sp-d16
 3663              	UART_DMATxOnlyAbortCallback:
 3664              	.LFB175:
2267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 118


 3665              		.loc 1 2267 0
 3666              		.cfi_startproc
 3667              		@ args = 0, pretend = 0, frame = 0
 3668              		@ frame_needed = 0, uses_anonymous_args = 0
 3669              	.LVL340:
 3670 0000 08B5     		push	{r3, lr}
 3671              	.LCFI44:
 3672              		.cfi_def_cfa_offset 8
 3673              		.cfi_offset 3, -8
 3674              		.cfi_offset 14, -4
2268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3675              		.loc 1 2268 0
 3676 0002 806B     		ldr	r0, [r0, #56]
 3677              	.LVL341:
2270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3678              		.loc 1 2270 0
 3679 0004 0023     		movs	r3, #0
 3680 0006 C384     		strh	r3, [r0, #38]	@ movhi
2273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3681              		.loc 1 2273 0
 3682 0008 2023     		movs	r3, #32
 3683 000a 80F83930 		strb	r3, [r0, #57]
2276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3684              		.loc 1 2276 0
 3685 000e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3686              	.LVL342:
2277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3687              		.loc 1 2277 0
 3688 0012 08BD     		pop	{r3, pc}
 3689              		.cfi_endproc
 3690              	.LFE175:
 3692              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 3693              		.align	1
 3694              		.weak	HAL_UART_AbortReceiveCpltCallback
 3695              		.syntax unified
 3696              		.thumb
 3697              		.thumb_func
 3698              		.fpu fpv4-sp-d16
 3700              	HAL_UART_AbortReceiveCpltCallback:
 3701              	.LFB156:
1756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3702              		.loc 1 1756 0
 3703              		.cfi_startproc
 3704              		@ args = 0, pretend = 0, frame = 0
 3705              		@ frame_needed = 0, uses_anonymous_args = 0
 3706              		@ link register save eliminated.
 3707              	.LVL343:
1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3708              		.loc 1 1763 0
 3709 0000 7047     		bx	lr
 3710              		.cfi_endproc
 3711              	.LFE156:
 3713              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 3714              		.align	1
 3715              		.global	HAL_UART_AbortReceive_IT
 3716              		.syntax unified
 3717              		.thumb
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 119


 3718              		.thumb_func
 3719              		.fpu fpv4-sp-d16
 3721              	HAL_UART_AbortReceive_IT:
 3722              	.LFB147:
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3723              		.loc 1 1468 0
 3724              		.cfi_startproc
 3725              		@ args = 0, pretend = 0, frame = 0
 3726              		@ frame_needed = 0, uses_anonymous_args = 0
 3727              	.LVL344:
 3728 0000 10B5     		push	{r4, lr}
 3729              	.LCFI45:
 3730              		.cfi_def_cfa_offset 8
 3731              		.cfi_offset 4, -8
 3732              		.cfi_offset 14, -4
 3733 0002 0446     		mov	r4, r0
1470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3734              		.loc 1 1470 0
 3735 0004 0268     		ldr	r2, [r0]
 3736 0006 D368     		ldr	r3, [r2, #12]
 3737 0008 23F49073 		bic	r3, r3, #288
 3738 000c D360     		str	r3, [r2, #12]
1471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3739              		.loc 1 1471 0
 3740 000e 0268     		ldr	r2, [r0]
 3741 0010 5369     		ldr	r3, [r2, #20]
 3742 0012 23F00103 		bic	r3, r3, #1
 3743 0016 5361     		str	r3, [r2, #20]
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3744              		.loc 1 1474 0
 3745 0018 0368     		ldr	r3, [r0]
 3746 001a 5A69     		ldr	r2, [r3, #20]
 3747 001c 12F0400F 		tst	r2, #64
 3748 0020 18D0     		beq	.L271
1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3749              		.loc 1 1476 0
 3750 0022 5A69     		ldr	r2, [r3, #20]
 3751 0024 22F04002 		bic	r2, r2, #64
 3752 0028 5A61     		str	r2, [r3, #20]
1479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3753              		.loc 1 1479 0
 3754 002a 436B     		ldr	r3, [r0, #52]
 3755 002c 53B1     		cbz	r3, .L272
1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3756              		.loc 1 1483 0
 3757 002e 0D4A     		ldr	r2, .L275
 3758 0030 1A65     		str	r2, [r3, #80]
1486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3759              		.loc 1 1486 0
 3760 0032 406B     		ldr	r0, [r0, #52]
 3761              	.LVL345:
 3762 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3763              	.LVL346:
 3764 0038 10B1     		cbz	r0, .L273
1489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3765              		.loc 1 1489 0
 3766 003a 606B     		ldr	r0, [r4, #52]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 120


 3767 003c 036D     		ldr	r3, [r0, #80]
 3768 003e 9847     		blx	r3
 3769              	.LVL347:
 3770              	.L273:
1517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3771              		.loc 1 1517 0
 3772 0040 0020     		movs	r0, #0
 3773 0042 10BD     		pop	{r4, pc}
 3774              	.LVL348:
 3775              	.L272:
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3776              		.loc 1 1495 0
 3777 0044 0023     		movs	r3, #0
 3778 0046 C385     		strh	r3, [r0, #46]	@ movhi
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3779              		.loc 1 1498 0
 3780 0048 2023     		movs	r3, #32
 3781 004a 80F83A30 		strb	r3, [r0, #58]
1501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3782              		.loc 1 1501 0
 3783 004e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3784              	.LVL349:
 3785 0052 F5E7     		b	.L273
 3786              	.LVL350:
 3787              	.L271:
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3788              		.loc 1 1507 0
 3789 0054 0023     		movs	r3, #0
 3790 0056 C385     		strh	r3, [r0, #46]	@ movhi
1510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3791              		.loc 1 1510 0
 3792 0058 2023     		movs	r3, #32
 3793 005a 80F83A30 		strb	r3, [r0, #58]
1513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3794              		.loc 1 1513 0
 3795 005e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3796              	.LVL351:
 3797 0062 EDE7     		b	.L273
 3798              	.L276:
 3799              		.align	2
 3800              	.L275:
 3801 0064 00000000 		.word	UART_DMARxOnlyAbortCallback
 3802              		.cfi_endproc
 3803              	.LFE147:
 3805              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 3806              		.align	1
 3807              		.syntax unified
 3808              		.thumb
 3809              		.thumb_func
 3810              		.fpu fpv4-sp-d16
 3812              	UART_DMARxOnlyAbortCallback:
 3813              	.LFB176:
2288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3814              		.loc 1 2288 0
 3815              		.cfi_startproc
 3816              		@ args = 0, pretend = 0, frame = 0
 3817              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 121


 3818              	.LVL352:
 3819 0000 08B5     		push	{r3, lr}
 3820              	.LCFI46:
 3821              		.cfi_def_cfa_offset 8
 3822              		.cfi_offset 3, -8
 3823              		.cfi_offset 14, -4
2289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3824              		.loc 1 2289 0
 3825 0002 806B     		ldr	r0, [r0, #56]
 3826              	.LVL353:
2291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3827              		.loc 1 2291 0
 3828 0004 0023     		movs	r3, #0
 3829 0006 C385     		strh	r3, [r0, #46]	@ movhi
2294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3830              		.loc 1 2294 0
 3831 0008 2023     		movs	r3, #32
 3832 000a 80F83A30 		strb	r3, [r0, #58]
2297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3833              		.loc 1 2297 0
 3834 000e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3835              	.LVL354:
2298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3836              		.loc 1 2298 0
 3837 0012 08BD     		pop	{r3, pc}
 3838              		.cfi_endproc
 3839              	.LFE176:
 3841              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 3842              		.align	1
 3843              		.global	HAL_LIN_SendBreak
 3844              		.syntax unified
 3845              		.thumb
 3846              		.thumb_func
 3847              		.fpu fpv4-sp-d16
 3849              	HAL_LIN_SendBreak:
 3850              	.LFB157:
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 3851              		.loc 1 1793 0
 3852              		.cfi_startproc
 3853              		@ args = 0, pretend = 0, frame = 0
 3854              		@ frame_needed = 0, uses_anonymous_args = 0
 3855              		@ link register save eliminated.
 3856              	.LVL355:
1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3857              		.loc 1 1798 0
 3858 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3859 0004 012B     		cmp	r3, #1
 3860 0006 12D0     		beq	.L281
1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3861              		.loc 1 1798 0 is_stmt 0 discriminator 2
 3862 0008 0123     		movs	r3, #1
 3863 000a 80F83830 		strb	r3, [r0, #56]
1800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3864              		.loc 1 1800 0 is_stmt 1 discriminator 2
 3865 000e 2423     		movs	r3, #36
 3866 0010 80F83930 		strb	r3, [r0, #57]
1803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 122


 3867              		.loc 1 1803 0 discriminator 2
 3868 0014 0268     		ldr	r2, [r0]
 3869 0016 D368     		ldr	r3, [r2, #12]
 3870 0018 43F00103 		orr	r3, r3, #1
 3871 001c D360     		str	r3, [r2, #12]
1805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3872              		.loc 1 1805 0 discriminator 2
 3873 001e 2023     		movs	r3, #32
 3874 0020 80F83930 		strb	r3, [r0, #57]
1808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3875              		.loc 1 1808 0 discriminator 2
 3876 0024 0023     		movs	r3, #0
 3877 0026 80F83830 		strb	r3, [r0, #56]
1810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3878              		.loc 1 1810 0 discriminator 2
 3879 002a 1846     		mov	r0, r3
 3880              	.LVL356:
 3881 002c 7047     		bx	lr
 3882              	.LVL357:
 3883              	.L281:
1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3884              		.loc 1 1798 0
 3885 002e 0220     		movs	r0, #2
 3886              	.LVL358:
1811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3887              		.loc 1 1811 0
 3888 0030 7047     		bx	lr
 3889              		.cfi_endproc
 3890              	.LFE157:
 3892              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 3893              		.align	1
 3894              		.global	HAL_MultiProcessor_EnterMuteMode
 3895              		.syntax unified
 3896              		.thumb
 3897              		.thumb_func
 3898              		.fpu fpv4-sp-d16
 3900              	HAL_MultiProcessor_EnterMuteMode:
 3901              	.LFB158:
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 3902              		.loc 1 1820 0
 3903              		.cfi_startproc
 3904              		@ args = 0, pretend = 0, frame = 0
 3905              		@ frame_needed = 0, uses_anonymous_args = 0
 3906              		@ link register save eliminated.
 3907              	.LVL359:
1825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3908              		.loc 1 1825 0
 3909 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3910 0004 012B     		cmp	r3, #1
 3911 0006 12D0     		beq	.L284
1825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3912              		.loc 1 1825 0 is_stmt 0 discriminator 2
 3913 0008 0123     		movs	r3, #1
 3914 000a 80F83830 		strb	r3, [r0, #56]
1827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3915              		.loc 1 1827 0 is_stmt 1 discriminator 2
 3916 000e 2423     		movs	r3, #36
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 123


 3917 0010 80F83930 		strb	r3, [r0, #57]
1830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3918              		.loc 1 1830 0 discriminator 2
 3919 0014 0268     		ldr	r2, [r0]
 3920 0016 D368     		ldr	r3, [r2, #12]
 3921 0018 43F00203 		orr	r3, r3, #2
 3922 001c D360     		str	r3, [r2, #12]
1832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3923              		.loc 1 1832 0 discriminator 2
 3924 001e 2023     		movs	r3, #32
 3925 0020 80F83930 		strb	r3, [r0, #57]
1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3926              		.loc 1 1835 0 discriminator 2
 3927 0024 0023     		movs	r3, #0
 3928 0026 80F83830 		strb	r3, [r0, #56]
1837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3929              		.loc 1 1837 0 discriminator 2
 3930 002a 1846     		mov	r0, r3
 3931              	.LVL360:
 3932 002c 7047     		bx	lr
 3933              	.LVL361:
 3934              	.L284:
1825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3935              		.loc 1 1825 0
 3936 002e 0220     		movs	r0, #2
 3937              	.LVL362:
1838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3938              		.loc 1 1838 0
 3939 0030 7047     		bx	lr
 3940              		.cfi_endproc
 3941              	.LFE158:
 3943              		.section	.text.HAL_MultiProcessor_ExitMuteMode,"ax",%progbits
 3944              		.align	1
 3945              		.global	HAL_MultiProcessor_ExitMuteMode
 3946              		.syntax unified
 3947              		.thumb
 3948              		.thumb_func
 3949              		.fpu fpv4-sp-d16
 3951              	HAL_MultiProcessor_ExitMuteMode:
 3952              	.LFB159:
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 3953              		.loc 1 1847 0
 3954              		.cfi_startproc
 3955              		@ args = 0, pretend = 0, frame = 0
 3956              		@ frame_needed = 0, uses_anonymous_args = 0
 3957              		@ link register save eliminated.
 3958              	.LVL363:
1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3959              		.loc 1 1852 0
 3960 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3961 0004 012B     		cmp	r3, #1
 3962 0006 12D0     		beq	.L287
1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3963              		.loc 1 1852 0 is_stmt 0 discriminator 2
 3964 0008 0123     		movs	r3, #1
 3965 000a 80F83830 		strb	r3, [r0, #56]
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 124


 3966              		.loc 1 1854 0 is_stmt 1 discriminator 2
 3967 000e 2423     		movs	r3, #36
 3968 0010 80F83930 		strb	r3, [r0, #57]
1857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3969              		.loc 1 1857 0 discriminator 2
 3970 0014 0268     		ldr	r2, [r0]
 3971 0016 D368     		ldr	r3, [r2, #12]
 3972 0018 23F00203 		bic	r3, r3, #2
 3973 001c D360     		str	r3, [r2, #12]
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3974              		.loc 1 1859 0 discriminator 2
 3975 001e 2023     		movs	r3, #32
 3976 0020 80F83930 		strb	r3, [r0, #57]
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3977              		.loc 1 1862 0 discriminator 2
 3978 0024 0023     		movs	r3, #0
 3979 0026 80F83830 		strb	r3, [r0, #56]
1864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3980              		.loc 1 1864 0 discriminator 2
 3981 002a 1846     		mov	r0, r3
 3982              	.LVL364:
 3983 002c 7047     		bx	lr
 3984              	.LVL365:
 3985              	.L287:
1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3986              		.loc 1 1852 0
 3987 002e 0220     		movs	r0, #2
 3988              	.LVL366:
1865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3989              		.loc 1 1865 0
 3990 0030 7047     		bx	lr
 3991              		.cfi_endproc
 3992              	.LFE159:
 3994              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 3995              		.align	1
 3996              		.global	HAL_HalfDuplex_EnableTransmitter
 3997              		.syntax unified
 3998              		.thumb
 3999              		.thumb_func
 4000              		.fpu fpv4-sp-d16
 4002              	HAL_HalfDuplex_EnableTransmitter:
 4003              	.LFB160:
1874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 4004              		.loc 1 1874 0
 4005              		.cfi_startproc
 4006              		@ args = 0, pretend = 0, frame = 0
 4007              		@ frame_needed = 0, uses_anonymous_args = 0
 4008              		@ link register save eliminated.
 4009              	.LVL367:
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4010              		.loc 1 1878 0
 4011 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 4012 0004 012B     		cmp	r3, #1
 4013 0006 14D0     		beq	.L290
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4014              		.loc 1 1878 0 is_stmt 0 discriminator 2
 4015 0008 0123     		movs	r3, #1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 125


 4016 000a 80F83830 		strb	r3, [r0, #56]
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4017              		.loc 1 1880 0 is_stmt 1 discriminator 2
 4018 000e 2423     		movs	r3, #36
 4019 0010 80F83930 		strb	r3, [r0, #57]
1883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4020              		.loc 1 1883 0 discriminator 2
 4021 0014 0268     		ldr	r2, [r0]
 4022 0016 D368     		ldr	r3, [r2, #12]
 4023              	.LVL368:
1886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4024              		.loc 1 1886 0 discriminator 2
 4025 0018 23F00C03 		bic	r3, r3, #12
 4026              	.LVL369:
1889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4027              		.loc 1 1889 0 discriminator 2
 4028 001c 43F00803 		orr	r3, r3, #8
 4029              	.LVL370:
1892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
 4030              		.loc 1 1892 0 discriminator 2
 4031 0020 D360     		str	r3, [r2, #12]
1894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4032              		.loc 1 1894 0 discriminator 2
 4033 0022 2023     		movs	r3, #32
 4034              	.LVL371:
 4035 0024 80F83930 		strb	r3, [r0, #57]
 4036              	.LVL372:
1897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4037              		.loc 1 1897 0 discriminator 2
 4038 0028 0023     		movs	r3, #0
 4039 002a 80F83830 		strb	r3, [r0, #56]
1899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4040              		.loc 1 1899 0 discriminator 2
 4041 002e 1846     		mov	r0, r3
 4042              	.LVL373:
 4043 0030 7047     		bx	lr
 4044              	.LVL374:
 4045              	.L290:
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4046              		.loc 1 1878 0
 4047 0032 0220     		movs	r0, #2
 4048              	.LVL375:
1900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4049              		.loc 1 1900 0
 4050 0034 7047     		bx	lr
 4051              		.cfi_endproc
 4052              	.LFE160:
 4054              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 4055              		.align	1
 4056              		.global	HAL_HalfDuplex_EnableReceiver
 4057              		.syntax unified
 4058              		.thumb
 4059              		.thumb_func
 4060              		.fpu fpv4-sp-d16
 4062              	HAL_HalfDuplex_EnableReceiver:
 4063              	.LFB161:
1909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 126


 4064              		.loc 1 1909 0
 4065              		.cfi_startproc
 4066              		@ args = 0, pretend = 0, frame = 0
 4067              		@ frame_needed = 0, uses_anonymous_args = 0
 4068              		@ link register save eliminated.
 4069              	.LVL376:
1913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4070              		.loc 1 1913 0
 4071 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 4072 0004 012B     		cmp	r3, #1
 4073 0006 14D0     		beq	.L293
1913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4074              		.loc 1 1913 0 is_stmt 0 discriminator 2
 4075 0008 0123     		movs	r3, #1
 4076 000a 80F83830 		strb	r3, [r0, #56]
1915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4077              		.loc 1 1915 0 is_stmt 1 discriminator 2
 4078 000e 2423     		movs	r3, #36
 4079 0010 80F83930 		strb	r3, [r0, #57]
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4080              		.loc 1 1918 0 discriminator 2
 4081 0014 0268     		ldr	r2, [r0]
 4082 0016 D368     		ldr	r3, [r2, #12]
 4083              	.LVL377:
1921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4084              		.loc 1 1921 0 discriminator 2
 4085 0018 23F00C03 		bic	r3, r3, #12
 4086              	.LVL378:
1924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4087              		.loc 1 1924 0 discriminator 2
 4088 001c 43F00403 		orr	r3, r3, #4
 4089              	.LVL379:
1927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4090              		.loc 1 1927 0 discriminator 2
 4091 0020 D360     		str	r3, [r2, #12]
1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4092              		.loc 1 1929 0 discriminator 2
 4093 0022 2023     		movs	r3, #32
 4094              	.LVL380:
 4095 0024 80F83930 		strb	r3, [r0, #57]
 4096              	.LVL381:
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4097              		.loc 1 1932 0 discriminator 2
 4098 0028 0023     		movs	r3, #0
 4099 002a 80F83830 		strb	r3, [r0, #56]
1934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4100              		.loc 1 1934 0 discriminator 2
 4101 002e 1846     		mov	r0, r3
 4102              	.LVL382:
 4103 0030 7047     		bx	lr
 4104              	.LVL383:
 4105              	.L293:
1913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4106              		.loc 1 1913 0
 4107 0032 0220     		movs	r0, #2
 4108              	.LVL384:
1935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 127


 4109              		.loc 1 1935 0
 4110 0034 7047     		bx	lr
 4111              		.cfi_endproc
 4112              	.LFE161:
 4114              		.section	.text.HAL_UART_GetState,"ax",%progbits
 4115              		.align	1
 4116              		.global	HAL_UART_GetState
 4117              		.syntax unified
 4118              		.thumb
 4119              		.thumb_func
 4120              		.fpu fpv4-sp-d16
 4122              	HAL_UART_GetState:
 4123              	.LFB162:
1966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
 4124              		.loc 1 1966 0
 4125              		.cfi_startproc
 4126              		@ args = 0, pretend = 0, frame = 0
 4127              		@ frame_needed = 0, uses_anonymous_args = 0
 4128              		@ link register save eliminated.
 4129              	.LVL385:
1968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp2 = huart->RxState;
 4130              		.loc 1 1968 0
 4131 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 4132              	.LVL386:
1969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4133              		.loc 1 1969 0
 4134 0004 90F83A00 		ldrb	r0, [r0, #58]	@ zero_extendqisi2
 4135              	.LVL387:
1972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4136              		.loc 1 1972 0
 4137 0008 1843     		orrs	r0, r0, r3
 4138              	.LVL388:
 4139 000a 7047     		bx	lr
 4140              		.cfi_endproc
 4141              	.LFE162:
 4143              		.section	.text.HAL_UART_GetError,"ax",%progbits
 4144              		.align	1
 4145              		.global	HAL_UART_GetError
 4146              		.syntax unified
 4147              		.thumb
 4148              		.thumb_func
 4149              		.fpu fpv4-sp-d16
 4151              	HAL_UART_GetError:
 4152              	.LFB163:
1981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return huart->ErrorCode;
 4153              		.loc 1 1981 0
 4154              		.cfi_startproc
 4155              		@ args = 0, pretend = 0, frame = 0
 4156              		@ frame_needed = 0, uses_anonymous_args = 0
 4157              		@ link register save eliminated.
 4158              	.LVL389:
1982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4159              		.loc 1 1982 0
 4160 0000 C06B     		ldr	r0, [r0, #60]
 4161              	.LVL390:
1983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4162              		.loc 1 1983 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 128


 4163 0002 7047     		bx	lr
 4164              		.cfi_endproc
 4165              	.LFE163:
 4167              		.text
 4168              	.Letext0:
 4169              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 4170              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 4171              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 4172              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 4173              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 4174              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 4175              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 4176              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 4177              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 4178              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 4179              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 4180              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 4181              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 4182              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 4183              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 129


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal_uart.c
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:18     .text.UART_EndTxTransfer:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:24     .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:47     .text.UART_EndRxTransfer:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:53     .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:80     .text.UART_Transmit_IT:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:86     .text.UART_Transmit_IT:00000000 UART_Transmit_IT
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:173    .text.UART_SetConfig:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:179    .text.UART_SetConfig:00000000 UART_SetConfig
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:529    .text.UART_SetConfig:0000032c $d
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:535    .text.UART_WaitOnFlagUntilTimeout:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:541    .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:616    .text.HAL_UART_MspInit:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:623    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:637    .text.HAL_UART_Init:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:644    .text.HAL_UART_Init:00000000 HAL_UART_Init
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:725    .text.HAL_HalfDuplex_Init:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:732    .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:819    .text.HAL_LIN_Init:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:826    .text.HAL_LIN_Init:00000000 HAL_LIN_Init
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:930    .text.HAL_MultiProcessor_Init:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:937    .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:1046   .text.HAL_UART_MspDeInit:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:1053   .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:1067   .text.HAL_UART_DeInit:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:1074   .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:1122   .text.HAL_UART_Transmit:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:1129   .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:1315   .text.HAL_UART_Receive:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:1322   .text.HAL_UART_Receive:00000000 HAL_UART_Receive
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:1513   .text.HAL_UART_Transmit_IT:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:1520   .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:1595   .text.HAL_UART_Receive_IT:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:1602   .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:1682   .text.HAL_UART_Transmit_DMA:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:1689   .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:1801   .text.HAL_UART_Transmit_DMA:00000080 $d
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2486   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2600   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2902   .text.UART_DMAError:00000000 UART_DMAError
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:1808   .text.HAL_UART_Receive_DMA:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:1815   .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:1951   .text.HAL_UART_Receive_DMA:0000009c $d
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2651   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2851   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:1958   .text.HAL_UART_DMAPause:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:1965   .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2052   .text.HAL_UART_DMAResume:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2059   .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2153   .text.HAL_UART_DMAStop:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2160   .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2249   .text.HAL_UART_Abort:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2256   .text.HAL_UART_Abort:00000000 HAL_UART_Abort
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2338   .text.HAL_UART_AbortTransmit:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2345   .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2396   .text.HAL_UART_AbortReceive:00000000 $t
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 130


C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2403   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2459   .text.HAL_UART_TxCpltCallback:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2466   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2480   .text.UART_DMATransmitCplt:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2537   .text.UART_EndTransmit_IT:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2543   .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2573   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2580   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2594   .text.UART_DMATxHalfCplt:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2624   .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2631   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2645   .text.UART_DMAReceiveCplt:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2704   .text.UART_Receive_IT:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2710   .text.UART_Receive_IT:00000000 UART_Receive_IT
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2824   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2831   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2845   .text.UART_DMARxHalfCplt:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2875   .text.HAL_UART_ErrorCallback:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2882   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2896   .text.UART_DMAError:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2984   .text.HAL_UART_IRQHandler:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:2991   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:3211   .text.HAL_UART_IRQHandler:0000011c $d
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:3222   .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:3216   .text.UART_DMAAbortOnError:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:3251   .text.HAL_UART_AbortCpltCallback:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:3258   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:3272   .text.HAL_UART_Abort_IT:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:3279   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:3429   .text.HAL_UART_Abort_IT:000000bc $d
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:3498   .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:3441   .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:3435   .text.UART_DMARxAbortCallback:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:3492   .text.UART_DMATxAbortCallback:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:3549   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:3556   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:3570   .text.HAL_UART_AbortTransmit_IT:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:3577   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:3652   .text.HAL_UART_AbortTransmit_IT:0000005c $d
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:3663   .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:3657   .text.UART_DMATxOnlyAbortCallback:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:3693   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:3700   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:3714   .text.HAL_UART_AbortReceive_IT:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:3721   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:3801   .text.HAL_UART_AbortReceive_IT:00000064 $d
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:3812   .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:3806   .text.UART_DMARxOnlyAbortCallback:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:3842   .text.HAL_LIN_SendBreak:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:3849   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:3893   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:3900   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:3944   .text.HAL_MultiProcessor_ExitMuteMode:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:3951   .text.HAL_MultiProcessor_ExitMuteMode:00000000 HAL_MultiProcessor_ExitMuteMode
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:3995   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:4002   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:4055   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s 			page 131


C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:4062   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:4115   .text.HAL_UART_GetState:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:4122   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:4144   .text.HAL_UART_GetError:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc4gnAFQ.s:4151   .text.HAL_UART_GetError:00000000 HAL_UART_GetError

UNDEFINED SYMBOLS
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
